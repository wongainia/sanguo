// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class RoleInfoPart1 implements Externalizable, Message<RoleInfoPart1>, Schema<RoleInfoPart1>
{

    public static Schema<RoleInfoPart1> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static RoleInfoPart1 getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final RoleInfoPart1 DEFAULT_INSTANCE = new RoleInfoPart1();

    
    private Integer lastLoginTime;
    private Integer militaryLevel;
    private Integer worldLevelReward;
    private Integer hotProtectTime;
    private Integer initBuildingProcess;
    private String extend;

    public RoleInfoPart1()
    {
        
    }

    // getters and setters

    // lastLoginTime

    public boolean hasLastLoginTime(){
        return lastLoginTime != null;
    }


    public Integer getLastLoginTime()
    {
        return lastLoginTime == null ? 0 : lastLoginTime;
    }

    public RoleInfoPart1 setLastLoginTime(Integer lastLoginTime)
    {
        this.lastLoginTime = lastLoginTime;
        return this;
    }

    // militaryLevel

    public boolean hasMilitaryLevel(){
        return militaryLevel != null;
    }


    public Integer getMilitaryLevel()
    {
        return militaryLevel == null ? 0 : militaryLevel;
    }

    public RoleInfoPart1 setMilitaryLevel(Integer militaryLevel)
    {
        this.militaryLevel = militaryLevel;
        return this;
    }

    // worldLevelReward

    public boolean hasWorldLevelReward(){
        return worldLevelReward != null;
    }


    public Integer getWorldLevelReward()
    {
        return worldLevelReward == null ? 0 : worldLevelReward;
    }

    public RoleInfoPart1 setWorldLevelReward(Integer worldLevelReward)
    {
        this.worldLevelReward = worldLevelReward;
        return this;
    }

    // hotProtectTime

    public boolean hasHotProtectTime(){
        return hotProtectTime != null;
    }


    public Integer getHotProtectTime()
    {
        return hotProtectTime == null ? 0 : hotProtectTime;
    }

    public RoleInfoPart1 setHotProtectTime(Integer hotProtectTime)
    {
        this.hotProtectTime = hotProtectTime;
        return this;
    }

    // initBuildingProcess

    public boolean hasInitBuildingProcess(){
        return initBuildingProcess != null;
    }


    public Integer getInitBuildingProcess()
    {
        return initBuildingProcess == null ? 0 : initBuildingProcess;
    }

    public RoleInfoPart1 setInitBuildingProcess(Integer initBuildingProcess)
    {
        this.initBuildingProcess = initBuildingProcess;
        return this;
    }

    // extend

    public boolean hasExtend(){
        return extend != null;
    }


    public String getExtend()
    {
        return extend == null ? "" : extend;
    }

    public RoleInfoPart1 setExtend(String extend)
    {
        this.extend = extend;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<RoleInfoPart1> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public RoleInfoPart1 newMessage()
    {
        return new RoleInfoPart1();
    }

    public Class<RoleInfoPart1> typeClass()
    {
        return RoleInfoPart1.class;
    }

    public String messageName()
    {
        return RoleInfoPart1.class.getSimpleName();
    }

    public String messageFullName()
    {
        return RoleInfoPart1.class.getName();
    }

    public boolean isInitialized(RoleInfoPart1 message)
    {
        return true;
    }

    public void mergeFrom(Input input, RoleInfoPart1 message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 20:
                    message.lastLoginTime = input.readUInt32();
                    break;
                case 40:
                    message.militaryLevel = input.readUInt32();
                    break;
                case 50:
                    message.worldLevelReward = input.readUInt32();
                    break;
                case 60:
                    message.hotProtectTime = input.readUInt32();
                    break;
                case 70:
                    message.initBuildingProcess = input.readUInt32();
                    break;
                case 100:
                    message.extend = input.readString();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, RoleInfoPart1 message) throws IOException
    {
        if(message.lastLoginTime != null)
            output.writeUInt32(20, message.lastLoginTime, false);

        if(message.militaryLevel != null)
            output.writeUInt32(40, message.militaryLevel, false);

        if(message.worldLevelReward != null)
            output.writeUInt32(50, message.worldLevelReward, false);

        if(message.hotProtectTime != null)
            output.writeUInt32(60, message.hotProtectTime, false);

        if(message.initBuildingProcess != null)
            output.writeUInt32(70, message.initBuildingProcess, false);

        if(message.extend != null)
            output.writeString(100, message.extend, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
