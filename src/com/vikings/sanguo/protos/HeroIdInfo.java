// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class HeroIdInfo implements Externalizable, Message<HeroIdInfo>, Schema<HeroIdInfo>
{

    public static Schema<HeroIdInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static HeroIdInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final HeroIdInfo DEFAULT_INSTANCE = new HeroIdInfo();

    
    private Long hero;
    private Integer heroid;
    private Integer type;
    private Integer talent;
    private Integer role;

    public HeroIdInfo()
    {
        
    }

    // getters and setters

    // hero

    public boolean hasHero(){
        return hero != null;
    }


    public Long getHero()
    {
        return hero == null ? 0L : hero;
    }

    public HeroIdInfo setHero(Long hero)
    {
        this.hero = hero;
        return this;
    }

    // heroid

    public boolean hasHeroid(){
        return heroid != null;
    }


    public Integer getHeroid()
    {
        return heroid == null ? 0 : heroid;
    }

    public HeroIdInfo setHeroid(Integer heroid)
    {
        this.heroid = heroid;
        return this;
    }

    // type

    public boolean hasType(){
        return type != null;
    }


    public Integer getType()
    {
        return type == null ? 0 : type;
    }

    public HeroIdInfo setType(Integer type)
    {
        this.type = type;
        return this;
    }

    // talent

    public boolean hasTalent(){
        return talent != null;
    }


    public Integer getTalent()
    {
        return talent == null ? 0 : talent;
    }

    public HeroIdInfo setTalent(Integer talent)
    {
        this.talent = talent;
        return this;
    }

    // role

    public boolean hasRole(){
        return role != null;
    }


    public Integer getRole()
    {
        return role == null ? 0 : role;
    }

    public HeroIdInfo setRole(Integer role)
    {
        this.role = role;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<HeroIdInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public HeroIdInfo newMessage()
    {
        return new HeroIdInfo();
    }

    public Class<HeroIdInfo> typeClass()
    {
        return HeroIdInfo.class;
    }

    public String messageName()
    {
        return HeroIdInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return HeroIdInfo.class.getName();
    }

    public boolean isInitialized(HeroIdInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, HeroIdInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.hero = input.readUInt64();
                    break;
                case 20:
                    message.heroid = input.readUInt32();
                    break;
                case 30:
                    message.type = input.readUInt32();
                    break;
                case 40:
                    message.talent = input.readUInt32();
                    break;
                case 50:
                    message.role = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, HeroIdInfo message) throws IOException
    {
        if(message.hero != null)
            output.writeUInt64(10, message.hero, false);

        if(message.heroid != null)
            output.writeUInt32(20, message.heroid, false);

        if(message.type != null)
            output.writeUInt32(30, message.type, false);

        if(message.talent != null)
            output.writeUInt32(40, message.talent, false);

        if(message.role != null)
            output.writeUInt32(50, message.role, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
