// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class RoleDayInfo implements Externalizable, Message<RoleDayInfo>, Schema<RoleDayInfo>
{

    public static Schema<RoleDayInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static RoleDayInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final RoleDayInfo DEFAULT_INSTANCE = new RoleDayInfo();

    
    private Integer day;
    private Integer dungeonHelp;
    private Integer staminaReset;
    private Integer charge;
    private Integer boxTimes;
    private Integer currencyCost;

    public RoleDayInfo()
    {
        
    }

    // getters and setters

    // day

    public boolean hasDay(){
        return day != null;
    }


    public Integer getDay()
    {
        return day == null ? 0 : day;
    }

    public RoleDayInfo setDay(Integer day)
    {
        this.day = day;
        return this;
    }

    // dungeonHelp

    public boolean hasDungeonHelp(){
        return dungeonHelp != null;
    }


    public Integer getDungeonHelp()
    {
        return dungeonHelp == null ? 0 : dungeonHelp;
    }

    public RoleDayInfo setDungeonHelp(Integer dungeonHelp)
    {
        this.dungeonHelp = dungeonHelp;
        return this;
    }

    // staminaReset

    public boolean hasStaminaReset(){
        return staminaReset != null;
    }


    public Integer getStaminaReset()
    {
        return staminaReset == null ? 0 : staminaReset;
    }

    public RoleDayInfo setStaminaReset(Integer staminaReset)
    {
        this.staminaReset = staminaReset;
        return this;
    }

    // charge

    public boolean hasCharge(){
        return charge != null;
    }


    public Integer getCharge()
    {
        return charge == null ? 0 : charge;
    }

    public RoleDayInfo setCharge(Integer charge)
    {
        this.charge = charge;
        return this;
    }

    // boxTimes

    public boolean hasBoxTimes(){
        return boxTimes != null;
    }


    public Integer getBoxTimes()
    {
        return boxTimes == null ? 0 : boxTimes;
    }

    public RoleDayInfo setBoxTimes(Integer boxTimes)
    {
        this.boxTimes = boxTimes;
        return this;
    }

    // currencyCost

    public boolean hasCurrencyCost(){
        return currencyCost != null;
    }


    public Integer getCurrencyCost()
    {
        return currencyCost == null ? 0 : currencyCost;
    }

    public RoleDayInfo setCurrencyCost(Integer currencyCost)
    {
        this.currencyCost = currencyCost;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<RoleDayInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public RoleDayInfo newMessage()
    {
        return new RoleDayInfo();
    }

    public Class<RoleDayInfo> typeClass()
    {
        return RoleDayInfo.class;
    }

    public String messageName()
    {
        return RoleDayInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return RoleDayInfo.class.getName();
    }

    public boolean isInitialized(RoleDayInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, RoleDayInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.day = input.readUInt32();
                    break;
                case 20:
                    message.dungeonHelp = input.readInt32();
                    break;
                case 30:
                    message.staminaReset = input.readInt32();
                    break;
                case 40:
                    message.charge = input.readUInt32();
                    break;
                case 50:
                    message.boxTimes = input.readUInt32();
                    break;
                case 60:
                    message.currencyCost = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, RoleDayInfo message) throws IOException
    {
        if(message.day != null)
            output.writeUInt32(10, message.day, false);

        if(message.dungeonHelp != null)
            output.writeInt32(20, message.dungeonHelp, false);

        if(message.staminaReset != null)
            output.writeInt32(30, message.staminaReset, false);

        if(message.charge != null)
            output.writeUInt32(40, message.charge, false);

        if(message.boxTimes != null)
            output.writeUInt32(50, message.boxTimes, false);

        if(message.currencyCost != null)
            output.writeUInt32(60, message.currencyCost, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
