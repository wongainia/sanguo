// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqBriefBattleLogQueryByFiefId implements Externalizable, Message<MsgReqBriefBattleLogQueryByFiefId>, Schema<MsgReqBriefBattleLogQueryByFiefId>
{

    public static Schema<MsgReqBriefBattleLogQueryByFiefId> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqBriefBattleLogQueryByFiefId getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqBriefBattleLogQueryByFiefId DEFAULT_INSTANCE = new MsgReqBriefBattleLogQueryByFiefId();

    
    private Long fiefid;
    private Integer start;
    private Integer count;

    public MsgReqBriefBattleLogQueryByFiefId()
    {
        
    }

    // getters and setters

    // fiefid

    public boolean hasFiefid(){
        return fiefid != null;
    }


    public Long getFiefid()
    {
        return fiefid == null ? 0L : fiefid;
    }

    public MsgReqBriefBattleLogQueryByFiefId setFiefid(Long fiefid)
    {
        this.fiefid = fiefid;
        return this;
    }

    // start

    public boolean hasStart(){
        return start != null;
    }


    public Integer getStart()
    {
        return start == null ? 0 : start;
    }

    public MsgReqBriefBattleLogQueryByFiefId setStart(Integer start)
    {
        this.start = start;
        return this;
    }

    // count

    public boolean hasCount(){
        return count != null;
    }


    public Integer getCount()
    {
        return count == null ? 0 : count;
    }

    public MsgReqBriefBattleLogQueryByFiefId setCount(Integer count)
    {
        this.count = count;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqBriefBattleLogQueryByFiefId> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqBriefBattleLogQueryByFiefId newMessage()
    {
        return new MsgReqBriefBattleLogQueryByFiefId();
    }

    public Class<MsgReqBriefBattleLogQueryByFiefId> typeClass()
    {
        return MsgReqBriefBattleLogQueryByFiefId.class;
    }

    public String messageName()
    {
        return MsgReqBriefBattleLogQueryByFiefId.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqBriefBattleLogQueryByFiefId.class.getName();
    }

    public boolean isInitialized(MsgReqBriefBattleLogQueryByFiefId message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqBriefBattleLogQueryByFiefId message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.fiefid = input.readUInt64();
                    break;
                case 20:
                    message.start = input.readUInt32();
                    break;
                case 30:
                    message.count = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqBriefBattleLogQueryByFiefId message) throws IOException
    {
        if(message.fiefid != null)
            output.writeUInt64(10, message.fiefid, false);

        if(message.start != null)
            output.writeUInt32(20, message.start, false);

        if(message.count != null)
            output.writeUInt32(30, message.count, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
