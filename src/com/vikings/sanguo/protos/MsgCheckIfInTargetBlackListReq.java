// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgCheckIfInTargetBlackListReq implements Externalizable, Message<MsgCheckIfInTargetBlackListReq>, Schema<MsgCheckIfInTargetBlackListReq>
{

    public static Schema<MsgCheckIfInTargetBlackListReq> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgCheckIfInTargetBlackListReq getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgCheckIfInTargetBlackListReq DEFAULT_INSTANCE = new MsgCheckIfInTargetBlackListReq();

    
    private Integer targetid;

    public MsgCheckIfInTargetBlackListReq()
    {
        
    }

    // getters and setters

    // targetid

    public boolean hasTargetid(){
        return targetid != null;
    }


    public Integer getTargetid()
    {
        return targetid == null ? 0 : targetid;
    }

    public MsgCheckIfInTargetBlackListReq setTargetid(Integer targetid)
    {
        this.targetid = targetid;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgCheckIfInTargetBlackListReq> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgCheckIfInTargetBlackListReq newMessage()
    {
        return new MsgCheckIfInTargetBlackListReq();
    }

    public Class<MsgCheckIfInTargetBlackListReq> typeClass()
    {
        return MsgCheckIfInTargetBlackListReq.class;
    }

    public String messageName()
    {
        return MsgCheckIfInTargetBlackListReq.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgCheckIfInTargetBlackListReq.class.getName();
    }

    public boolean isInitialized(MsgCheckIfInTargetBlackListReq message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgCheckIfInTargetBlackListReq message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.targetid = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgCheckIfInTargetBlackListReq message) throws IOException
    {
        if(message.targetid != null)
            output.writeUInt32(10, message.targetid, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
