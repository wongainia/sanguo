// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqItemSell implements Externalizable, Message<MsgReqItemSell>, Schema<MsgReqItemSell>
{

    public static Schema<MsgReqItemSell> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqItemSell getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqItemSell DEFAULT_INSTANCE = new MsgReqItemSell();

    
    private Long bagid;
    private Integer amount;

    public MsgReqItemSell()
    {
        
    }

    // getters and setters

    // bagid

    public boolean hasBagid(){
        return bagid != null;
    }


    public Long getBagid()
    {
        return bagid == null ? 0L : bagid;
    }

    public MsgReqItemSell setBagid(Long bagid)
    {
        this.bagid = bagid;
        return this;
    }

    // amount

    public boolean hasAmount(){
        return amount != null;
    }


    public Integer getAmount()
    {
        return amount == null ? 0 : amount;
    }

    public MsgReqItemSell setAmount(Integer amount)
    {
        this.amount = amount;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqItemSell> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqItemSell newMessage()
    {
        return new MsgReqItemSell();
    }

    public Class<MsgReqItemSell> typeClass()
    {
        return MsgReqItemSell.class;
    }

    public String messageName()
    {
        return MsgReqItemSell.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqItemSell.class.getName();
    }

    public boolean isInitialized(MsgReqItemSell message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqItemSell message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.bagid = input.readUInt64();
                    break;
                case 20:
                    message.amount = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqItemSell message) throws IOException
    {
        if(message.bagid != null)
            output.writeUInt64(10, message.bagid, false);

        if(message.amount != null)
            output.writeUInt32(20, message.amount, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
