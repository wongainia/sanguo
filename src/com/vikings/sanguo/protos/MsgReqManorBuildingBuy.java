// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqManorBuildingBuy implements Externalizable, Message<MsgReqManorBuildingBuy>, Schema<MsgReqManorBuildingBuy>
{

    public static Schema<MsgReqManorBuildingBuy> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqManorBuildingBuy getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqManorBuildingBuy DEFAULT_INSTANCE = new MsgReqManorBuildingBuy();

    
    private Integer type;
    private Integer itemid;

    public MsgReqManorBuildingBuy()
    {
        
    }

    // getters and setters

    // type

    public boolean hasType(){
        return type != null;
    }


    public Integer getType()
    {
        return type == null ? 0 : type;
    }

    public MsgReqManorBuildingBuy setType(Integer type)
    {
        this.type = type;
        return this;
    }

    // itemid

    public boolean hasItemid(){
        return itemid != null;
    }


    public Integer getItemid()
    {
        return itemid == null ? 0 : itemid;
    }

    public MsgReqManorBuildingBuy setItemid(Integer itemid)
    {
        this.itemid = itemid;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqManorBuildingBuy> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqManorBuildingBuy newMessage()
    {
        return new MsgReqManorBuildingBuy();
    }

    public Class<MsgReqManorBuildingBuy> typeClass()
    {
        return MsgReqManorBuildingBuy.class;
    }

    public String messageName()
    {
        return MsgReqManorBuildingBuy.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqManorBuildingBuy.class.getName();
    }

    public boolean isInitialized(MsgReqManorBuildingBuy message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqManorBuildingBuy message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.type = input.readUInt32();
                    break;
                case 20:
                    message.itemid = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqManorBuildingBuy message) throws IOException
    {
        if(message.type != null)
            output.writeUInt32(10, message.type, false);

        if(message.itemid != null)
            output.writeUInt32(20, message.itemid, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
