// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class UserStatData implements Externalizable, Message<UserStatData>, Schema<UserStatData>
{

    public static Schema<UserStatData> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static UserStatData getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final UserStatData DEFAULT_INSTANCE = new UserStatData();

    
    private Integer userid;
    private Integer level;
    private Integer money;
    private Integer score;
    private Integer regard;
    private Integer exp;
    private Integer credit;
    private Integer population;
    private Integer albumPraise;

    public UserStatData()
    {
        
    }

    // getters and setters

    // userid

    public boolean hasUserid(){
        return userid != null;
    }


    public Integer getUserid()
    {
        return userid == null ? 0 : userid;
    }

    public UserStatData setUserid(Integer userid)
    {
        this.userid = userid;
        return this;
    }

    // level

    public boolean hasLevel(){
        return level != null;
    }


    public Integer getLevel()
    {
        return level == null ? 0 : level;
    }

    public UserStatData setLevel(Integer level)
    {
        this.level = level;
        return this;
    }

    // money

    public boolean hasMoney(){
        return money != null;
    }


    public Integer getMoney()
    {
        return money == null ? 0 : money;
    }

    public UserStatData setMoney(Integer money)
    {
        this.money = money;
        return this;
    }

    // score

    public boolean hasScore(){
        return score != null;
    }


    public Integer getScore()
    {
        return score == null ? 0 : score;
    }

    public UserStatData setScore(Integer score)
    {
        this.score = score;
        return this;
    }

    // regard

    public boolean hasRegard(){
        return regard != null;
    }


    public Integer getRegard()
    {
        return regard == null ? 0 : regard;
    }

    public UserStatData setRegard(Integer regard)
    {
        this.regard = regard;
        return this;
    }

    // exp

    public boolean hasExp(){
        return exp != null;
    }


    public Integer getExp()
    {
        return exp == null ? 0 : exp;
    }

    public UserStatData setExp(Integer exp)
    {
        this.exp = exp;
        return this;
    }

    // credit

    public boolean hasCredit(){
        return credit != null;
    }


    public Integer getCredit()
    {
        return credit == null ? 0 : credit;
    }

    public UserStatData setCredit(Integer credit)
    {
        this.credit = credit;
        return this;
    }

    // population

    public boolean hasPopulation(){
        return population != null;
    }


    public Integer getPopulation()
    {
        return population == null ? 0 : population;
    }

    public UserStatData setPopulation(Integer population)
    {
        this.population = population;
        return this;
    }

    // albumPraise

    public boolean hasAlbumPraise(){
        return albumPraise != null;
    }


    public Integer getAlbumPraise()
    {
        return albumPraise == null ? 0 : albumPraise;
    }

    public UserStatData setAlbumPraise(Integer albumPraise)
    {
        this.albumPraise = albumPraise;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<UserStatData> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public UserStatData newMessage()
    {
        return new UserStatData();
    }

    public Class<UserStatData> typeClass()
    {
        return UserStatData.class;
    }

    public String messageName()
    {
        return UserStatData.class.getSimpleName();
    }

    public String messageFullName()
    {
        return UserStatData.class.getName();
    }

    public boolean isInitialized(UserStatData message)
    {
        return true;
    }

    public void mergeFrom(Input input, UserStatData message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.userid = input.readUInt32();
                    break;
                case 20:
                    message.level = input.readUInt32();
                    break;
                case 30:
                    message.money = input.readUInt32();
                    break;
                case 40:
                    message.score = input.readUInt32();
                    break;
                case 50:
                    message.regard = input.readUInt32();
                    break;
                case 60:
                    message.exp = input.readUInt32();
                    break;
                case 70:
                    message.credit = input.readUInt32();
                    break;
                case 80:
                    message.population = input.readUInt32();
                    break;
                case 90:
                    message.albumPraise = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, UserStatData message) throws IOException
    {
        if(message.userid != null)
            output.writeUInt32(10, message.userid, false);

        if(message.level != null)
            output.writeUInt32(20, message.level, false);

        if(message.money != null)
            output.writeUInt32(30, message.money, false);

        if(message.score != null)
            output.writeUInt32(40, message.score, false);

        if(message.regard != null)
            output.writeUInt32(50, message.regard, false);

        if(message.exp != null)
            output.writeUInt32(60, message.exp, false);

        if(message.credit != null)
            output.writeUInt32(70, message.credit, false);

        if(message.population != null)
            output.writeUInt32(80, message.population, false);

        if(message.albumPraise != null)
            output.writeUInt32(90, message.albumPraise, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
