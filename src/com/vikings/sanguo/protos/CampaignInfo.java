// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class CampaignInfo implements Externalizable, Message<CampaignInfo>, Schema<CampaignInfo>
{

    public static Schema<CampaignInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static CampaignInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final CampaignInfo DEFAULT_INSTANCE = new CampaignInfo();

    
    private Integer id;
    private Integer times;
    private CampaignTimeCondition lastCondition;
    private Integer optimes;

    public CampaignInfo()
    {
        
    }

    // getters and setters

    // id

    public boolean hasId(){
        return id != null;
    }


    public Integer getId()
    {
        return id == null ? 0 : id;
    }

    public CampaignInfo setId(Integer id)
    {
        this.id = id;
        return this;
    }

    // times

    public boolean hasTimes(){
        return times != null;
    }


    public Integer getTimes()
    {
        return times == null ? 0 : times;
    }

    public CampaignInfo setTimes(Integer times)
    {
        this.times = times;
        return this;
    }

    // lastCondition

    public boolean hasLastCondition(){
        return lastCondition != null;
    }


    public CampaignTimeCondition getLastCondition()
    {
        return lastCondition == null ? new CampaignTimeCondition() : lastCondition;
    }

    public CampaignInfo setLastCondition(CampaignTimeCondition lastCondition)
    {
        this.lastCondition = lastCondition;
        return this;
    }

    // optimes

    public boolean hasOptimes(){
        return optimes != null;
    }


    public Integer getOptimes()
    {
        return optimes == null ? 0 : optimes;
    }

    public CampaignInfo setOptimes(Integer optimes)
    {
        this.optimes = optimes;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<CampaignInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public CampaignInfo newMessage()
    {
        return new CampaignInfo();
    }

    public Class<CampaignInfo> typeClass()
    {
        return CampaignInfo.class;
    }

    public String messageName()
    {
        return CampaignInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return CampaignInfo.class.getName();
    }

    public boolean isInitialized(CampaignInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, CampaignInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.id = input.readUInt32();
                    break;
                case 20:
                    message.times = input.readUInt32();
                    break;
                case 40:
                    message.lastCondition = input.mergeObject(message.lastCondition, CampaignTimeCondition.getSchema());
                    break;

                case 50:
                    message.optimes = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, CampaignInfo message) throws IOException
    {
        if(message.id != null)
            output.writeUInt32(10, message.id, false);

        if(message.times != null)
            output.writeUInt32(20, message.times, false);

        if(message.lastCondition != null)
             output.writeObject(40, message.lastCondition, CampaignTimeCondition.getSchema(), false);


        if(message.optimes != null)
            output.writeUInt32(50, message.optimes, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
