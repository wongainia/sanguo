// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqItemUse implements Externalizable, Message<MsgReqItemUse>, Schema<MsgReqItemUse>
{

    public static Schema<MsgReqItemUse> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqItemUse getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqItemUse DEFAULT_INSTANCE = new MsgReqItemUse();

    static final Integer DEFAULT_COUNT = new Integer(1);
    
    private Integer targetid;
    private Long bagid;
    private Integer itemid;
    private Integer scheme;
    private Integer count = DEFAULT_COUNT;

    public MsgReqItemUse()
    {
        
    }

    // getters and setters

    // targetid

    public boolean hasTargetid(){
        return targetid != null;
    }


    public Integer getTargetid()
    {
        return targetid == null ? 0 : targetid;
    }

    public MsgReqItemUse setTargetid(Integer targetid)
    {
        this.targetid = targetid;
        return this;
    }

    // bagid

    public boolean hasBagid(){
        return bagid != null;
    }


    public Long getBagid()
    {
        return bagid == null ? 0L : bagid;
    }

    public MsgReqItemUse setBagid(Long bagid)
    {
        this.bagid = bagid;
        return this;
    }

    // itemid

    public boolean hasItemid(){
        return itemid != null;
    }


    public Integer getItemid()
    {
        return itemid == null ? 0 : itemid;
    }

    public MsgReqItemUse setItemid(Integer itemid)
    {
        this.itemid = itemid;
        return this;
    }

    // scheme

    public boolean hasScheme(){
        return scheme != null;
    }


    public Integer getScheme()
    {
        return scheme == null ? 0 : scheme;
    }

    public MsgReqItemUse setScheme(Integer scheme)
    {
        this.scheme = scheme;
        return this;
    }

    // count

    public boolean hasCount(){
        return count != null;
    }


    public Integer getCount()
    {
        return count == null ? 0 : count;
    }

    public MsgReqItemUse setCount(Integer count)
    {
        this.count = count;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqItemUse> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqItemUse newMessage()
    {
        return new MsgReqItemUse();
    }

    public Class<MsgReqItemUse> typeClass()
    {
        return MsgReqItemUse.class;
    }

    public String messageName()
    {
        return MsgReqItemUse.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqItemUse.class.getName();
    }

    public boolean isInitialized(MsgReqItemUse message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqItemUse message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.targetid = input.readUInt32();
                    break;
                case 20:
                    message.bagid = input.readUInt64();
                    break;
                case 30:
                    message.itemid = input.readUInt32();
                    break;
                case 40:
                    message.scheme = input.readUInt32();
                    break;
                case 50:
                    message.count = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqItemUse message) throws IOException
    {
        if(message.targetid != null)
            output.writeUInt32(10, message.targetid, false);

        if(message.bagid != null)
            output.writeUInt64(20, message.bagid, false);

        if(message.itemid != null)
            output.writeUInt32(30, message.itemid, false);

        if(message.scheme != null)
            output.writeUInt32(40, message.scheme, false);

        if(message.count != null && message.count != DEFAULT_COUNT)
            output.writeUInt32(50, message.count, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
