// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqFiefRecommendEmptySpace implements Externalizable, Message<MsgReqFiefRecommendEmptySpace>, Schema<MsgReqFiefRecommendEmptySpace>
{

    public static Schema<MsgReqFiefRecommendEmptySpace> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqFiefRecommendEmptySpace getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqFiefRecommendEmptySpace DEFAULT_INSTANCE = new MsgReqFiefRecommendEmptySpace();

    
    private Long pos;
    private Integer province;
    private Integer city;

    public MsgReqFiefRecommendEmptySpace()
    {
        
    }

    // getters and setters

    // pos

    public boolean hasPos(){
        return pos != null;
    }


    public Long getPos()
    {
        return pos == null ? 0L : pos;
    }

    public MsgReqFiefRecommendEmptySpace setPos(Long pos)
    {
        this.pos = pos;
        return this;
    }

    // province

    public boolean hasProvince(){
        return province != null;
    }


    public Integer getProvince()
    {
        return province == null ? 0 : province;
    }

    public MsgReqFiefRecommendEmptySpace setProvince(Integer province)
    {
        this.province = province;
        return this;
    }

    // city

    public boolean hasCity(){
        return city != null;
    }


    public Integer getCity()
    {
        return city == null ? 0 : city;
    }

    public MsgReqFiefRecommendEmptySpace setCity(Integer city)
    {
        this.city = city;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqFiefRecommendEmptySpace> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqFiefRecommendEmptySpace newMessage()
    {
        return new MsgReqFiefRecommendEmptySpace();
    }

    public Class<MsgReqFiefRecommendEmptySpace> typeClass()
    {
        return MsgReqFiefRecommendEmptySpace.class;
    }

    public String messageName()
    {
        return MsgReqFiefRecommendEmptySpace.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqFiefRecommendEmptySpace.class.getName();
    }

    public boolean isInitialized(MsgReqFiefRecommendEmptySpace message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqFiefRecommendEmptySpace message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.pos = input.readUInt64();
                    break;
                case 20:
                    message.province = input.readUInt32();
                    break;
                case 30:
                    message.city = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqFiefRecommendEmptySpace message) throws IOException
    {
        if(message.pos != null)
            output.writeUInt64(10, message.pos, false);

        if(message.province != null)
            output.writeUInt32(20, message.province, false);

        if(message.city != null)
            output.writeUInt32(30, message.city, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
