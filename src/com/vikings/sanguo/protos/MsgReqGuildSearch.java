// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqGuildSearch implements Externalizable, Message<MsgReqGuildSearch>, Schema<MsgReqGuildSearch>
{

    public static Schema<MsgReqGuildSearch> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqGuildSearch getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqGuildSearch DEFAULT_INSTANCE = new MsgReqGuildSearch();

    
    private Integer start;
    private Integer count;
    private List<GuildSearchCond> conds;

    public MsgReqGuildSearch()
    {
        
    }

    // getters and setters

    // start

    public boolean hasStart(){
        return start != null;
    }


    public Integer getStart()
    {
        return start == null ? 0 : start;
    }

    public MsgReqGuildSearch setStart(Integer start)
    {
        this.start = start;
        return this;
    }

    // count

    public boolean hasCount(){
        return count != null;
    }


    public Integer getCount()
    {
        return count == null ? 0 : count;
    }

    public MsgReqGuildSearch setCount(Integer count)
    {
        this.count = count;
        return this;
    }

    // conds

    public boolean hasConds(){
        return conds != null;
    }


    public List<GuildSearchCond> getCondsList()
    {
        return conds == null?  new ArrayList<GuildSearchCond>():conds;
    }

    public int getCondsCount()
    {
        return conds == null?0:conds.size();
    }

    public GuildSearchCond getConds(int i)
    {
        return conds == null?null:conds.get(i);
    }


    public MsgReqGuildSearch setCondsList(List<GuildSearchCond> conds)
    {
        this.conds = conds;
        return this;    
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqGuildSearch> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqGuildSearch newMessage()
    {
        return new MsgReqGuildSearch();
    }

    public Class<MsgReqGuildSearch> typeClass()
    {
        return MsgReqGuildSearch.class;
    }

    public String messageName()
    {
        return MsgReqGuildSearch.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqGuildSearch.class.getName();
    }

    public boolean isInitialized(MsgReqGuildSearch message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqGuildSearch message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.start = input.readUInt32();
                    break;
                case 20:
                    message.count = input.readUInt32();
                    break;
                case 30:
                    if(message.conds == null)
                        message.conds = new ArrayList<GuildSearchCond>();
                    message.conds.add(input.mergeObject(null, GuildSearchCond.getSchema()));
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqGuildSearch message) throws IOException
    {
        if(message.start != null)
            output.writeUInt32(10, message.start, false);

        if(message.count != null)
            output.writeUInt32(20, message.count, false);

        if(message.conds != null)
        {
            for(GuildSearchCond conds : message.conds)
            {
                if(conds != null)
                    output.writeObject(30, conds, GuildSearchCond.getSchema(), true);
            }
        }

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
