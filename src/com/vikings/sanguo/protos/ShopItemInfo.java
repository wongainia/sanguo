// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class ShopItemInfo implements Externalizable, Message<ShopItemInfo>, Schema<ShopItemInfo>
{

    public static Schema<ShopItemInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static ShopItemInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final ShopItemInfo DEFAULT_INSTANCE = new ShopItemInfo();

    
    private Integer type;
    private Integer id;
    private Integer count;
    private Integer timeScheme;

    public ShopItemInfo()
    {
        
    }

    // getters and setters

    // type

    public boolean hasType(){
        return type != null;
    }


    public Integer getType()
    {
        return type == null ? 0 : type;
    }

    public ShopItemInfo setType(Integer type)
    {
        this.type = type;
        return this;
    }

    // id

    public boolean hasId(){
        return id != null;
    }


    public Integer getId()
    {
        return id == null ? 0 : id;
    }

    public ShopItemInfo setId(Integer id)
    {
        this.id = id;
        return this;
    }

    // count

    public boolean hasCount(){
        return count != null;
    }


    public Integer getCount()
    {
        return count == null ? 0 : count;
    }

    public ShopItemInfo setCount(Integer count)
    {
        this.count = count;
        return this;
    }

    // timeScheme

    public boolean hasTimeScheme(){
        return timeScheme != null;
    }


    public Integer getTimeScheme()
    {
        return timeScheme == null ? 0 : timeScheme;
    }

    public ShopItemInfo setTimeScheme(Integer timeScheme)
    {
        this.timeScheme = timeScheme;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<ShopItemInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public ShopItemInfo newMessage()
    {
        return new ShopItemInfo();
    }

    public Class<ShopItemInfo> typeClass()
    {
        return ShopItemInfo.class;
    }

    public String messageName()
    {
        return ShopItemInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return ShopItemInfo.class.getName();
    }

    public boolean isInitialized(ShopItemInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, ShopItemInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.type = input.readUInt32();
                    break;
                case 20:
                    message.id = input.readUInt32();
                    break;
                case 30:
                    message.count = input.readUInt32();
                    break;
                case 40:
                    message.timeScheme = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, ShopItemInfo message) throws IOException
    {
        if(message.type != null)
            output.writeUInt32(10, message.type, false);

        if(message.id != null)
            output.writeUInt32(20, message.id, false);

        if(message.count != null)
            output.writeUInt32(30, message.count, false);

        if(message.timeScheme != null)
            output.writeUInt32(40, message.timeScheme, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
