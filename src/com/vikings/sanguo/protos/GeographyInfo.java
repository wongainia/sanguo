// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class GeographyInfo implements Externalizable, Message<GeographyInfo>, Schema<GeographyInfo>
{

    public static Schema<GeographyInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static GeographyInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final GeographyInfo DEFAULT_INSTANCE = new GeographyInfo();

    
    private Long tileid;
    private Integer province;
    private Integer city;

    public GeographyInfo()
    {
        
    }

    // getters and setters

    // tileid

    public boolean hasTileid(){
        return tileid != null;
    }


    public Long getTileid()
    {
        return tileid == null ? 0L : tileid;
    }

    public GeographyInfo setTileid(Long tileid)
    {
        this.tileid = tileid;
        return this;
    }

    // province

    public boolean hasProvince(){
        return province != null;
    }


    public Integer getProvince()
    {
        return province == null ? 0 : province;
    }

    public GeographyInfo setProvince(Integer province)
    {
        this.province = province;
        return this;
    }

    // city

    public boolean hasCity(){
        return city != null;
    }


    public Integer getCity()
    {
        return city == null ? 0 : city;
    }

    public GeographyInfo setCity(Integer city)
    {
        this.city = city;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<GeographyInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public GeographyInfo newMessage()
    {
        return new GeographyInfo();
    }

    public Class<GeographyInfo> typeClass()
    {
        return GeographyInfo.class;
    }

    public String messageName()
    {
        return GeographyInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return GeographyInfo.class.getName();
    }

    public boolean isInitialized(GeographyInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, GeographyInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.tileid = input.readUInt64();
                    break;
                case 20:
                    message.province = input.readUInt32();
                    break;
                case 30:
                    message.city = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, GeographyInfo message) throws IOException
    {
        if(message.tileid != null)
            output.writeUInt64(10, message.tileid, false);

        if(message.province != null)
            output.writeUInt32(20, message.province, false);

        if(message.city != null)
            output.writeUInt32(30, message.city, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
