// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class HeroRankInfo implements Externalizable, Message<HeroRankInfo>, Schema<HeroRankInfo>
{

    public static Schema<HeroRankInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static HeroRankInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final HeroRankInfo DEFAULT_INSTANCE = new HeroRankInfo();

    
    private Long id;
    private Integer heroid;
    private Integer maxArmValue;
    private Integer type;
    private Integer lord;
    private String lordNick;
    private Integer country;
    private Integer guildid;
    private Integer talent;

    public HeroRankInfo()
    {
        
    }

    // getters and setters

    // id

    public boolean hasId(){
        return id != null;
    }


    public Long getId()
    {
        return id == null ? 0L : id;
    }

    public HeroRankInfo setId(Long id)
    {
        this.id = id;
        return this;
    }

    // heroid

    public boolean hasHeroid(){
        return heroid != null;
    }


    public Integer getHeroid()
    {
        return heroid == null ? 0 : heroid;
    }

    public HeroRankInfo setHeroid(Integer heroid)
    {
        this.heroid = heroid;
        return this;
    }

    // maxArmValue

    public boolean hasMaxArmValue(){
        return maxArmValue != null;
    }


    public Integer getMaxArmValue()
    {
        return maxArmValue == null ? 0 : maxArmValue;
    }

    public HeroRankInfo setMaxArmValue(Integer maxArmValue)
    {
        this.maxArmValue = maxArmValue;
        return this;
    }

    // type

    public boolean hasType(){
        return type != null;
    }


    public Integer getType()
    {
        return type == null ? 0 : type;
    }

    public HeroRankInfo setType(Integer type)
    {
        this.type = type;
        return this;
    }

    // lord

    public boolean hasLord(){
        return lord != null;
    }


    public Integer getLord()
    {
        return lord == null ? 0 : lord;
    }

    public HeroRankInfo setLord(Integer lord)
    {
        this.lord = lord;
        return this;
    }

    // lordNick

    public boolean hasLordNick(){
        return lordNick != null;
    }


    public String getLordNick()
    {
        return lordNick == null ? "" : lordNick;
    }

    public HeroRankInfo setLordNick(String lordNick)
    {
        this.lordNick = lordNick;
        return this;
    }

    // country

    public boolean hasCountry(){
        return country != null;
    }


    public Integer getCountry()
    {
        return country == null ? 0 : country;
    }

    public HeroRankInfo setCountry(Integer country)
    {
        this.country = country;
        return this;
    }

    // guildid

    public boolean hasGuildid(){
        return guildid != null;
    }


    public Integer getGuildid()
    {
        return guildid == null ? 0 : guildid;
    }

    public HeroRankInfo setGuildid(Integer guildid)
    {
        this.guildid = guildid;
        return this;
    }

    // talent

    public boolean hasTalent(){
        return talent != null;
    }


    public Integer getTalent()
    {
        return talent == null ? 0 : talent;
    }

    public HeroRankInfo setTalent(Integer talent)
    {
        this.talent = talent;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<HeroRankInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public HeroRankInfo newMessage()
    {
        return new HeroRankInfo();
    }

    public Class<HeroRankInfo> typeClass()
    {
        return HeroRankInfo.class;
    }

    public String messageName()
    {
        return HeroRankInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return HeroRankInfo.class.getName();
    }

    public boolean isInitialized(HeroRankInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, HeroRankInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.id = input.readUInt64();
                    break;
                case 20:
                    message.heroid = input.readUInt32();
                    break;
                case 30:
                    message.maxArmValue = input.readUInt32();
                    break;
                case 40:
                    message.type = input.readUInt32();
                    break;
                case 50:
                    message.lord = input.readUInt32();
                    break;
                case 60:
                    message.lordNick = input.readString();
                    break;
                case 70:
                    message.country = input.readUInt32();
                    break;
                case 80:
                    message.guildid = input.readUInt32();
                    break;
                case 90:
                    message.talent = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, HeroRankInfo message) throws IOException
    {
        if(message.id != null)
            output.writeUInt64(10, message.id, false);

        if(message.heroid != null)
            output.writeUInt32(20, message.heroid, false);

        if(message.maxArmValue != null)
            output.writeUInt32(30, message.maxArmValue, false);

        if(message.type != null)
            output.writeUInt32(40, message.type, false);

        if(message.lord != null)
            output.writeUInt32(50, message.lord, false);

        if(message.lordNick != null)
            output.writeString(60, message.lordNick, false);

        if(message.country != null)
            output.writeUInt32(70, message.country, false);

        if(message.guildid != null)
            output.writeUInt32(80, message.guildid, false);

        if(message.talent != null)
            output.writeUInt32(90, message.talent, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
