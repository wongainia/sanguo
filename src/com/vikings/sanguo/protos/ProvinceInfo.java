// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class ProvinceInfo implements Externalizable, Message<ProvinceInfo>, Schema<ProvinceInfo>
{

    public static Schema<ProvinceInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static ProvinceInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final ProvinceInfo DEFAULT_INSTANCE = new ProvinceInfo();

    
    private Integer province;
    private Integer count;

    public ProvinceInfo()
    {
        
    }

    // getters and setters

    // province

    public boolean hasProvince(){
        return province != null;
    }


    public Integer getProvince()
    {
        return province == null ? 0 : province;
    }

    public ProvinceInfo setProvince(Integer province)
    {
        this.province = province;
        return this;
    }

    // count

    public boolean hasCount(){
        return count != null;
    }


    public Integer getCount()
    {
        return count == null ? 0 : count;
    }

    public ProvinceInfo setCount(Integer count)
    {
        this.count = count;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<ProvinceInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public ProvinceInfo newMessage()
    {
        return new ProvinceInfo();
    }

    public Class<ProvinceInfo> typeClass()
    {
        return ProvinceInfo.class;
    }

    public String messageName()
    {
        return ProvinceInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return ProvinceInfo.class.getName();
    }

    public boolean isInitialized(ProvinceInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, ProvinceInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.province = input.readUInt32();
                    break;
                case 2:
                    message.count = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, ProvinceInfo message) throws IOException
    {
        if(message.province != null)
            output.writeUInt32(1, message.province, false);

        if(message.count != null)
            output.writeUInt32(2, message.count, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
