// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class BaseBattleIdInfo implements Externalizable, Message<BaseBattleIdInfo>, Schema<BaseBattleIdInfo>
{

    public static Schema<BaseBattleIdInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static BaseBattleIdInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final BaseBattleIdInfo DEFAULT_INSTANCE = new BaseBattleIdInfo();

    
    private Long battleid;
    private Integer flag;

    public BaseBattleIdInfo()
    {
        
    }

    // getters and setters

    // battleid

    public boolean hasBattleid(){
        return battleid != null;
    }


    public Long getBattleid()
    {
        return battleid == null ? 0L : battleid;
    }

    public BaseBattleIdInfo setBattleid(Long battleid)
    {
        this.battleid = battleid;
        return this;
    }

    // flag

    public boolean hasFlag(){
        return flag != null;
    }


    public Integer getFlag()
    {
        return flag == null ? 0 : flag;
    }

    public BaseBattleIdInfo setFlag(Integer flag)
    {
        this.flag = flag;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<BaseBattleIdInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public BaseBattleIdInfo newMessage()
    {
        return new BaseBattleIdInfo();
    }

    public Class<BaseBattleIdInfo> typeClass()
    {
        return BaseBattleIdInfo.class;
    }

    public String messageName()
    {
        return BaseBattleIdInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return BaseBattleIdInfo.class.getName();
    }

    public boolean isInitialized(BaseBattleIdInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, BaseBattleIdInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.battleid = input.readUInt64();
                    break;
                case 20:
                    message.flag = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, BaseBattleIdInfo message) throws IOException
    {
        if(message.battleid != null)
            output.writeUInt64(10, message.battleid, false);

        if(message.flag != null)
            output.writeUInt32(20, message.flag, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
