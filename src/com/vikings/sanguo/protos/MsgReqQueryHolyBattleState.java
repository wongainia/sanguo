// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqQueryHolyBattleState implements Externalizable, Message<MsgReqQueryHolyBattleState>, Schema<MsgReqQueryHolyBattleState>
{

    public static Schema<MsgReqQueryHolyBattleState> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqQueryHolyBattleState getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqQueryHolyBattleState DEFAULT_INSTANCE = new MsgReqQueryHolyBattleState();

    
    private Integer country;

    public MsgReqQueryHolyBattleState()
    {
        
    }

    // getters and setters

    // country

    public boolean hasCountry(){
        return country != null;
    }


    public Integer getCountry()
    {
        return country == null ? 0 : country;
    }

    public MsgReqQueryHolyBattleState setCountry(Integer country)
    {
        this.country = country;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqQueryHolyBattleState> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqQueryHolyBattleState newMessage()
    {
        return new MsgReqQueryHolyBattleState();
    }

    public Class<MsgReqQueryHolyBattleState> typeClass()
    {
        return MsgReqQueryHolyBattleState.class;
    }

    public String messageName()
    {
        return MsgReqQueryHolyBattleState.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqQueryHolyBattleState.class.getName();
    }

    public boolean isInitialized(MsgReqQueryHolyBattleState message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqQueryHolyBattleState message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.country = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqQueryHolyBattleState message) throws IOException
    {
        if(message.country != null)
            output.writeUInt32(10, message.country, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
