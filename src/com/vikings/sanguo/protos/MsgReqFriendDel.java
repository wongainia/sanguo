// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqFriendDel implements Externalizable, Message<MsgReqFriendDel>, Schema<MsgReqFriendDel>
{

    public static Schema<MsgReqFriendDel> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqFriendDel getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqFriendDel DEFAULT_INSTANCE = new MsgReqFriendDel();

    
    private List<Integer> targetids;

    public MsgReqFriendDel()
    {
        
    }

    // getters and setters

    // targetids

    public boolean hasTargetids(){
        return targetids != null;
    }


    public List<Integer> getTargetidsList()
    {
        return targetids == null?  new ArrayList<Integer>():targetids;
    }

    public int getTargetidsCount()
    {
        return targetids == null?0:targetids.size();
    }

    public Integer getTargetids(int i)
    {
        return targetids == null?null:targetids.get(i);
    }


    public MsgReqFriendDel setTargetidsList(List<Integer> targetids)
    {
        this.targetids = targetids;
        return this;    
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqFriendDel> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqFriendDel newMessage()
    {
        return new MsgReqFriendDel();
    }

    public Class<MsgReqFriendDel> typeClass()
    {
        return MsgReqFriendDel.class;
    }

    public String messageName()
    {
        return MsgReqFriendDel.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqFriendDel.class.getName();
    }

    public boolean isInitialized(MsgReqFriendDel message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqFriendDel message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    if(message.targetids == null)
                        message.targetids = new ArrayList<Integer>();
                    message.targetids.add(input.readUInt32());
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqFriendDel message) throws IOException
    {
        if(message.targetids != null)
        {
            for(Integer targetids : message.targetids)
            {
                if(targetids != null)
                    output.writeUInt32(10, targetids, true);
            }
        }
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
