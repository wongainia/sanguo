// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqDungeonAttack implements Externalizable, Message<MsgReqDungeonAttack>, Schema<MsgReqDungeonAttack>
{

    public static Schema<MsgReqDungeonAttack> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqDungeonAttack getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqDungeonAttack DEFAULT_INSTANCE = new MsgReqDungeonAttack();

    
    private Integer actid;
    private Integer campaignid;
    private List<HeroIdInfo> heroInfos;
    private Integer help;

    public MsgReqDungeonAttack()
    {
        
    }

    // getters and setters

    // actid

    public boolean hasActid(){
        return actid != null;
    }


    public Integer getActid()
    {
        return actid == null ? 0 : actid;
    }

    public MsgReqDungeonAttack setActid(Integer actid)
    {
        this.actid = actid;
        return this;
    }

    // campaignid

    public boolean hasCampaignid(){
        return campaignid != null;
    }


    public Integer getCampaignid()
    {
        return campaignid == null ? 0 : campaignid;
    }

    public MsgReqDungeonAttack setCampaignid(Integer campaignid)
    {
        this.campaignid = campaignid;
        return this;
    }

    // heroInfos

    public boolean hasHeroInfos(){
        return heroInfos != null;
    }


    public List<HeroIdInfo> getHeroInfosList()
    {
        return heroInfos == null?  new ArrayList<HeroIdInfo>():heroInfos;
    }

    public int getHeroInfosCount()
    {
        return heroInfos == null?0:heroInfos.size();
    }

    public HeroIdInfo getHeroInfos(int i)
    {
        return heroInfos == null?null:heroInfos.get(i);
    }


    public MsgReqDungeonAttack setHeroInfosList(List<HeroIdInfo> heroInfos)
    {
        this.heroInfos = heroInfos;
        return this;    
    }

    // help

    public boolean hasHelp(){
        return help != null;
    }


    public Integer getHelp()
    {
        return help == null ? 0 : help;
    }

    public MsgReqDungeonAttack setHelp(Integer help)
    {
        this.help = help;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqDungeonAttack> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqDungeonAttack newMessage()
    {
        return new MsgReqDungeonAttack();
    }

    public Class<MsgReqDungeonAttack> typeClass()
    {
        return MsgReqDungeonAttack.class;
    }

    public String messageName()
    {
        return MsgReqDungeonAttack.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqDungeonAttack.class.getName();
    }

    public boolean isInitialized(MsgReqDungeonAttack message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqDungeonAttack message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.actid = input.readUInt32();
                    break;
                case 20:
                    message.campaignid = input.readUInt32();
                    break;
                case 30:
                    if(message.heroInfos == null)
                        message.heroInfos = new ArrayList<HeroIdInfo>();
                    message.heroInfos.add(input.mergeObject(null, HeroIdInfo.getSchema()));
                    break;

                case 40:
                    message.help = input.readInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqDungeonAttack message) throws IOException
    {
        if(message.actid != null)
            output.writeUInt32(10, message.actid, false);

        if(message.campaignid != null)
            output.writeUInt32(20, message.campaignid, false);

        if(message.heroInfos != null)
        {
            for(HeroIdInfo heroInfos : message.heroInfos)
            {
                if(heroInfos != null)
                    output.writeObject(30, heroInfos, HeroIdInfo.getSchema(), true);
            }
        }


        if(message.help != null)
            output.writeInt32(40, message.help, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
