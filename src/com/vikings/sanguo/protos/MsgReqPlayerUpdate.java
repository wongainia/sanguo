// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqPlayerUpdate implements Externalizable, Message<MsgReqPlayerUpdate>, Schema<MsgReqPlayerUpdate>
{

    public static Schema<MsgReqPlayerUpdate> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqPlayerUpdate getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqPlayerUpdate DEFAULT_INSTANCE = new MsgReqPlayerUpdate();

    
    private Integer image;
    private String nick;
    private Integer sex;
    private Integer birthday;
    private Integer province;
    private String desc;

    public MsgReqPlayerUpdate()
    {
        
    }

    // getters and setters

    // image

    public boolean hasImage(){
        return image != null;
    }


    public Integer getImage()
    {
        return image == null ? 0 : image;
    }

    public MsgReqPlayerUpdate setImage(Integer image)
    {
        this.image = image;
        return this;
    }

    // nick

    public boolean hasNick(){
        return nick != null;
    }


    public String getNick()
    {
        return nick == null ? "" : nick;
    }

    public MsgReqPlayerUpdate setNick(String nick)
    {
        this.nick = nick;
        return this;
    }

    // sex

    public boolean hasSex(){
        return sex != null;
    }


    public Integer getSex()
    {
        return sex == null ? 0 : sex;
    }

    public MsgReqPlayerUpdate setSex(Integer sex)
    {
        this.sex = sex;
        return this;
    }

    // birthday

    public boolean hasBirthday(){
        return birthday != null;
    }


    public Integer getBirthday()
    {
        return birthday == null ? 0 : birthday;
    }

    public MsgReqPlayerUpdate setBirthday(Integer birthday)
    {
        this.birthday = birthday;
        return this;
    }

    // province

    public boolean hasProvince(){
        return province != null;
    }


    public Integer getProvince()
    {
        return province == null ? 0 : province;
    }

    public MsgReqPlayerUpdate setProvince(Integer province)
    {
        this.province = province;
        return this;
    }

    // desc

    public boolean hasDesc(){
        return desc != null;
    }


    public String getDesc()
    {
        return desc == null ? "" : desc;
    }

    public MsgReqPlayerUpdate setDesc(String desc)
    {
        this.desc = desc;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqPlayerUpdate> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqPlayerUpdate newMessage()
    {
        return new MsgReqPlayerUpdate();
    }

    public Class<MsgReqPlayerUpdate> typeClass()
    {
        return MsgReqPlayerUpdate.class;
    }

    public String messageName()
    {
        return MsgReqPlayerUpdate.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqPlayerUpdate.class.getName();
    }

    public boolean isInitialized(MsgReqPlayerUpdate message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqPlayerUpdate message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 20:
                    message.image = input.readUInt32();
                    break;
                case 30:
                    message.nick = input.readString();
                    break;
                case 40:
                    message.sex = input.readUInt32();
                    break;
                case 50:
                    message.birthday = input.readUInt32();
                    break;
                case 60:
                    message.province = input.readUInt32();
                    break;
                case 140:
                    message.desc = input.readString();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqPlayerUpdate message) throws IOException
    {
        if(message.image != null)
            output.writeUInt32(20, message.image, false);

        if(message.nick != null)
            output.writeString(30, message.nick, false);

        if(message.sex != null)
            output.writeUInt32(40, message.sex, false);

        if(message.birthday != null)
            output.writeUInt32(50, message.birthday, false);

        if(message.province != null)
            output.writeUInt32(60, message.province, false);

        if(message.desc != null)
            output.writeString(140, message.desc, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
