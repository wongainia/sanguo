// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class BaseGuildInfo implements Externalizable, Message<BaseGuildInfo>, Schema<BaseGuildInfo>
{

    public static Schema<BaseGuildInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static BaseGuildInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final BaseGuildInfo DEFAULT_INSTANCE = new BaseGuildInfo();

    static final Boolean DEFAULT_AUTO_JOIN = new Boolean(true);
    
    private Integer id;
    private String name;
    private Integer image;
    private Integer leader;
    private Integer level;
    private Integer fiefCount;
    private String desc;
    private String announcement;
    private Integer country;
    private Boolean autoJoin = DEFAULT_AUTO_JOIN;
    private List<GuildPositionInfo> positionInfos;

    public BaseGuildInfo()
    {
        
    }

    // getters and setters

    // id

    public boolean hasId(){
        return id != null;
    }


    public Integer getId()
    {
        return id == null ? 0 : id;
    }

    public BaseGuildInfo setId(Integer id)
    {
        this.id = id;
        return this;
    }

    // name

    public boolean hasName(){
        return name != null;
    }


    public String getName()
    {
        return name == null ? "" : name;
    }

    public BaseGuildInfo setName(String name)
    {
        this.name = name;
        return this;
    }

    // image

    public boolean hasImage(){
        return image != null;
    }


    public Integer getImage()
    {
        return image == null ? 0 : image;
    }

    public BaseGuildInfo setImage(Integer image)
    {
        this.image = image;
        return this;
    }

    // leader

    public boolean hasLeader(){
        return leader != null;
    }


    public Integer getLeader()
    {
        return leader == null ? 0 : leader;
    }

    public BaseGuildInfo setLeader(Integer leader)
    {
        this.leader = leader;
        return this;
    }

    // level

    public boolean hasLevel(){
        return level != null;
    }


    public Integer getLevel()
    {
        return level == null ? 0 : level;
    }

    public BaseGuildInfo setLevel(Integer level)
    {
        this.level = level;
        return this;
    }

    // fiefCount

    public boolean hasFiefCount(){
        return fiefCount != null;
    }


    public Integer getFiefCount()
    {
        return fiefCount == null ? 0 : fiefCount;
    }

    public BaseGuildInfo setFiefCount(Integer fiefCount)
    {
        this.fiefCount = fiefCount;
        return this;
    }

    // desc

    public boolean hasDesc(){
        return desc != null;
    }


    public String getDesc()
    {
        return desc == null ? "" : desc;
    }

    public BaseGuildInfo setDesc(String desc)
    {
        this.desc = desc;
        return this;
    }

    // announcement

    public boolean hasAnnouncement(){
        return announcement != null;
    }


    public String getAnnouncement()
    {
        return announcement == null ? "" : announcement;
    }

    public BaseGuildInfo setAnnouncement(String announcement)
    {
        this.announcement = announcement;
        return this;
    }

    // country

    public boolean hasCountry(){
        return country != null;
    }


    public Integer getCountry()
    {
        return country == null ? 0 : country;
    }

    public BaseGuildInfo setCountry(Integer country)
    {
        this.country = country;
        return this;
    }

    // autoJoin

    public boolean hasAutoJoin(){
        return autoJoin != null;
    }


    public Boolean getAutoJoin()
    {
        return autoJoin == null ? false : autoJoin;
    }

    public BaseGuildInfo setAutoJoin(Boolean autoJoin)
    {
        this.autoJoin = autoJoin;
        return this;
    }

    // positionInfos

    public boolean hasPositionInfos(){
        return positionInfos != null;
    }


    public List<GuildPositionInfo> getPositionInfosList()
    {
        return positionInfos == null?  new ArrayList<GuildPositionInfo>():positionInfos;
    }

    public int getPositionInfosCount()
    {
        return positionInfos == null?0:positionInfos.size();
    }

    public GuildPositionInfo getPositionInfos(int i)
    {
        return positionInfos == null?null:positionInfos.get(i);
    }


    public BaseGuildInfo setPositionInfosList(List<GuildPositionInfo> positionInfos)
    {
        this.positionInfos = positionInfos;
        return this;    
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<BaseGuildInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public BaseGuildInfo newMessage()
    {
        return new BaseGuildInfo();
    }

    public Class<BaseGuildInfo> typeClass()
    {
        return BaseGuildInfo.class;
    }

    public String messageName()
    {
        return BaseGuildInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return BaseGuildInfo.class.getName();
    }

    public boolean isInitialized(BaseGuildInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, BaseGuildInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.id = input.readUInt32();
                    break;
                case 20:
                    message.name = input.readString();
                    break;
                case 30:
                    message.image = input.readUInt32();
                    break;
                case 40:
                    message.leader = input.readUInt32();
                    break;
                case 50:
                    message.level = input.readUInt32();
                    break;
                case 70:
                    message.fiefCount = input.readUInt32();
                    break;
                case 90:
                    message.desc = input.readString();
                    break;
                case 100:
                    message.announcement = input.readString();
                    break;
                case 110:
                    message.country = input.readUInt32();
                    break;
                case 130:
                    message.autoJoin = input.readBool();
                    break;
                case 200:
                    if(message.positionInfos == null)
                        message.positionInfos = new ArrayList<GuildPositionInfo>();
                    message.positionInfos.add(input.mergeObject(null, GuildPositionInfo.getSchema()));
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, BaseGuildInfo message) throws IOException
    {
        if(message.id != null)
            output.writeUInt32(10, message.id, false);

        if(message.name != null)
            output.writeString(20, message.name, false);

        if(message.image != null)
            output.writeUInt32(30, message.image, false);

        if(message.leader != null)
            output.writeUInt32(40, message.leader, false);

        if(message.level != null)
            output.writeUInt32(50, message.level, false);

        if(message.fiefCount != null)
            output.writeUInt32(70, message.fiefCount, false);

        if(message.desc != null)
            output.writeString(90, message.desc, false);

        if(message.announcement != null)
            output.writeString(100, message.announcement, false);

        if(message.country != null)
            output.writeUInt32(110, message.country, false);

        if(message.autoJoin != null && message.autoJoin != DEFAULT_AUTO_JOIN)
            output.writeBool(130, message.autoJoin, false);

        if(message.positionInfos != null)
        {
            for(GuildPositionInfo positionInfos : message.positionInfos)
            {
                if(positionInfos != null)
                    output.writeObject(200, positionInfos, GuildPositionInfo.getSchema(), true);
            }
        }

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
