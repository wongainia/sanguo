// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgRegisterReq implements Externalizable, Message<MsgRegisterReq>, Schema<MsgRegisterReq>
{

    public static Schema<MsgRegisterReq> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgRegisterReq getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgRegisterReq DEFAULT_INSTANCE = new MsgRegisterReq();

    
    private String sim;
    private Integer programid;
    private Integer channel;
    private Integer province;
    private String partnerId;
    private String extend;

    public MsgRegisterReq()
    {
        
    }

    // getters and setters

    // sim

    public boolean hasSim(){
        return sim != null;
    }


    public String getSim()
    {
        return sim == null ? "" : sim;
    }

    public MsgRegisterReq setSim(String sim)
    {
        this.sim = sim;
        return this;
    }

    // programid

    public boolean hasProgramid(){
        return programid != null;
    }


    public Integer getProgramid()
    {
        return programid == null ? 0 : programid;
    }

    public MsgRegisterReq setProgramid(Integer programid)
    {
        this.programid = programid;
        return this;
    }

    // channel

    public boolean hasChannel(){
        return channel != null;
    }


    public Integer getChannel()
    {
        return channel == null ? 0 : channel;
    }

    public MsgRegisterReq setChannel(Integer channel)
    {
        this.channel = channel;
        return this;
    }

    // province

    public boolean hasProvince(){
        return province != null;
    }


    public Integer getProvince()
    {
        return province == null ? 0 : province;
    }

    public MsgRegisterReq setProvince(Integer province)
    {
        this.province = province;
        return this;
    }

    // partnerId

    public boolean hasPartnerId(){
        return partnerId != null;
    }


    public String getPartnerId()
    {
        return partnerId == null ? "" : partnerId;
    }

    public MsgRegisterReq setPartnerId(String partnerId)
    {
        this.partnerId = partnerId;
        return this;
    }

    // extend

    public boolean hasExtend(){
        return extend != null;
    }


    public String getExtend()
    {
        return extend == null ? "" : extend;
    }

    public MsgRegisterReq setExtend(String extend)
    {
        this.extend = extend;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgRegisterReq> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgRegisterReq newMessage()
    {
        return new MsgRegisterReq();
    }

    public Class<MsgRegisterReq> typeClass()
    {
        return MsgRegisterReq.class;
    }

    public String messageName()
    {
        return MsgRegisterReq.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgRegisterReq.class.getName();
    }

    public boolean isInitialized(MsgRegisterReq message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgRegisterReq message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.sim = input.readString();
                    break;
                case 20:
                    message.programid = input.readUInt32();
                    break;
                case 30:
                    message.channel = input.readUInt32();
                    break;
                case 40:
                    message.province = input.readUInt32();
                    break;
                case 60:
                    message.partnerId = input.readString();
                    break;
                case 100:
                    message.extend = input.readString();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgRegisterReq message) throws IOException
    {
        if(message.sim != null)
            output.writeString(10, message.sim, false);

        if(message.programid != null)
            output.writeUInt32(20, message.programid, false);

        if(message.channel != null)
            output.writeUInt32(30, message.channel, false);

        if(message.province != null)
            output.writeUInt32(40, message.province, false);

        if(message.partnerId != null)
            output.writeString(60, message.partnerId, false);

        if(message.extend != null)
            output.writeString(100, message.extend, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
