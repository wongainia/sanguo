// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class ReturnHeroInfo implements Externalizable, Message<ReturnHeroInfo>, Schema<ReturnHeroInfo>
{

    public static Schema<ReturnHeroInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static ReturnHeroInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final ReturnHeroInfo DEFAULT_INSTANCE = new ReturnHeroInfo();

    
    private Long hero;
    private Integer userid;
    private Integer heroid;
    private Integer levelDiff;
    private Integer talent;
    private Integer expDiff;
    private Integer type;
    private List<HeroArmProp> diffArmProps;

    public ReturnHeroInfo()
    {
        
    }

    // getters and setters

    // hero

    public boolean hasHero(){
        return hero != null;
    }


    public Long getHero()
    {
        return hero == null ? 0L : hero;
    }

    public ReturnHeroInfo setHero(Long hero)
    {
        this.hero = hero;
        return this;
    }

    // userid

    public boolean hasUserid(){
        return userid != null;
    }


    public Integer getUserid()
    {
        return userid == null ? 0 : userid;
    }

    public ReturnHeroInfo setUserid(Integer userid)
    {
        this.userid = userid;
        return this;
    }

    // heroid

    public boolean hasHeroid(){
        return heroid != null;
    }


    public Integer getHeroid()
    {
        return heroid == null ? 0 : heroid;
    }

    public ReturnHeroInfo setHeroid(Integer heroid)
    {
        this.heroid = heroid;
        return this;
    }

    // levelDiff

    public boolean hasLevelDiff(){
        return levelDiff != null;
    }


    public Integer getLevelDiff()
    {
        return levelDiff == null ? 0 : levelDiff;
    }

    public ReturnHeroInfo setLevelDiff(Integer levelDiff)
    {
        this.levelDiff = levelDiff;
        return this;
    }

    // talent

    public boolean hasTalent(){
        return talent != null;
    }


    public Integer getTalent()
    {
        return talent == null ? 0 : talent;
    }

    public ReturnHeroInfo setTalent(Integer talent)
    {
        this.talent = talent;
        return this;
    }

    // expDiff

    public boolean hasExpDiff(){
        return expDiff != null;
    }


    public Integer getExpDiff()
    {
        return expDiff == null ? 0 : expDiff;
    }

    public ReturnHeroInfo setExpDiff(Integer expDiff)
    {
        this.expDiff = expDiff;
        return this;
    }

    // type

    public boolean hasType(){
        return type != null;
    }


    public Integer getType()
    {
        return type == null ? 0 : type;
    }

    public ReturnHeroInfo setType(Integer type)
    {
        this.type = type;
        return this;
    }

    // diffArmProps

    public boolean hasDiffArmProps(){
        return diffArmProps != null;
    }


    public List<HeroArmProp> getDiffArmPropsList()
    {
        return diffArmProps == null?  new ArrayList<HeroArmProp>():diffArmProps;
    }

    public int getDiffArmPropsCount()
    {
        return diffArmProps == null?0:diffArmProps.size();
    }

    public HeroArmProp getDiffArmProps(int i)
    {
        return diffArmProps == null?null:diffArmProps.get(i);
    }


    public ReturnHeroInfo setDiffArmPropsList(List<HeroArmProp> diffArmProps)
    {
        this.diffArmProps = diffArmProps;
        return this;    
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<ReturnHeroInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public ReturnHeroInfo newMessage()
    {
        return new ReturnHeroInfo();
    }

    public Class<ReturnHeroInfo> typeClass()
    {
        return ReturnHeroInfo.class;
    }

    public String messageName()
    {
        return ReturnHeroInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return ReturnHeroInfo.class.getName();
    }

    public boolean isInitialized(ReturnHeroInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, ReturnHeroInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.hero = input.readUInt64();
                    break;
                case 20:
                    message.userid = input.readUInt32();
                    break;
                case 30:
                    message.heroid = input.readUInt32();
                    break;
                case 40:
                    message.levelDiff = input.readInt32();
                    break;
                case 50:
                    message.talent = input.readUInt32();
                    break;
                case 60:
                    message.expDiff = input.readInt32();
                    break;
                case 80:
                    message.type = input.readUInt32();
                    break;
                case 200:
                    if(message.diffArmProps == null)
                        message.diffArmProps = new ArrayList<HeroArmProp>();
                    message.diffArmProps.add(input.mergeObject(null, HeroArmProp.getSchema()));
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, ReturnHeroInfo message) throws IOException
    {
        if(message.hero != null)
            output.writeUInt64(10, message.hero, false);

        if(message.userid != null)
            output.writeUInt32(20, message.userid, false);

        if(message.heroid != null)
            output.writeUInt32(30, message.heroid, false);

        if(message.levelDiff != null)
            output.writeInt32(40, message.levelDiff, false);

        if(message.talent != null)
            output.writeUInt32(50, message.talent, false);

        if(message.expDiff != null)
            output.writeInt32(60, message.expDiff, false);

        if(message.type != null)
            output.writeUInt32(80, message.type, false);

        if(message.diffArmProps != null)
        {
            for(HeroArmProp diffArmProps : message.diffArmProps)
            {
                if(diffArmProps != null)
                    output.writeObject(200, diffArmProps, HeroArmProp.getSchema(), true);
            }
        }

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
