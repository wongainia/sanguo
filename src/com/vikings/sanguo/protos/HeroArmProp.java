// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class HeroArmProp implements Externalizable, Message<HeroArmProp>, Schema<HeroArmProp>
{

    public static Schema<HeroArmProp> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static HeroArmProp getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final HeroArmProp DEFAULT_INSTANCE = new HeroArmProp();

    
    private Integer type;
    private Integer value;
    private Integer maxValue;

    public HeroArmProp()
    {
        
    }

    // getters and setters

    // type

    public boolean hasType(){
        return type != null;
    }


    public Integer getType()
    {
        return type == null ? 0 : type;
    }

    public HeroArmProp setType(Integer type)
    {
        this.type = type;
        return this;
    }

    // value

    public boolean hasValue(){
        return value != null;
    }


    public Integer getValue()
    {
        return value == null ? 0 : value;
    }

    public HeroArmProp setValue(Integer value)
    {
        this.value = value;
        return this;
    }

    // maxValue

    public boolean hasMaxValue(){
        return maxValue != null;
    }


    public Integer getMaxValue()
    {
        return maxValue == null ? 0 : maxValue;
    }

    public HeroArmProp setMaxValue(Integer maxValue)
    {
        this.maxValue = maxValue;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<HeroArmProp> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public HeroArmProp newMessage()
    {
        return new HeroArmProp();
    }

    public Class<HeroArmProp> typeClass()
    {
        return HeroArmProp.class;
    }

    public String messageName()
    {
        return HeroArmProp.class.getSimpleName();
    }

    public String messageFullName()
    {
        return HeroArmProp.class.getName();
    }

    public boolean isInitialized(HeroArmProp message)
    {
        return true;
    }

    public void mergeFrom(Input input, HeroArmProp message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.type = input.readUInt32();
                    break;
                case 20:
                    message.value = input.readInt32();
                    break;
                case 30:
                    message.maxValue = input.readInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, HeroArmProp message) throws IOException
    {
        if(message.type != null)
            output.writeUInt32(10, message.type, false);

        if(message.value != null)
            output.writeInt32(20, message.value, false);

        if(message.maxValue != null)
            output.writeInt32(30, message.maxValue, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
