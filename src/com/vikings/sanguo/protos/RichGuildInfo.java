// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;
import com.dyuproject.protostuff.UninitializedMessageException;

public final class RichGuildInfo implements Externalizable, Message<RichGuildInfo>, Schema<RichGuildInfo>
{

    public static Schema<RichGuildInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static RichGuildInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final RichGuildInfo DEFAULT_INSTANCE = new RichGuildInfo();

    
    private DataCtrl ctrl;
    private Integer guildid;
    private ExGuildInfo guildInfo;
    private GuildMemberInfos memberInfos;
    private GuildJoinInfos joinInfos;
    private GuildInviteInfos inviteInfos;

    public RichGuildInfo()
    {
        
    }

    public RichGuildInfo(
        Integer guildid
    )
    {
        this.guildid = guildid;
    }

    // getters and setters

    // ctrl

    public boolean hasCtrl(){
        return ctrl != null;
    }


    public DataCtrl getCtrl()
    {
        return ctrl == null ? new DataCtrl() : ctrl;
    }

    public RichGuildInfo setCtrl(DataCtrl ctrl)
    {
        this.ctrl = ctrl;
        return this;
    }

    // guildid

    public boolean hasGuildid(){
        return guildid != null;
    }


    public Integer getGuildid()
    {
        return guildid == null ? 0 : guildid;
    }

    public RichGuildInfo setGuildid(Integer guildid)
    {
        this.guildid = guildid;
        return this;
    }

    // guildInfo

    public boolean hasGuildInfo(){
        return guildInfo != null;
    }


    public ExGuildInfo getGuildInfo()
    {
        return guildInfo == null ? new ExGuildInfo() : guildInfo;
    }

    public RichGuildInfo setGuildInfo(ExGuildInfo guildInfo)
    {
        this.guildInfo = guildInfo;
        return this;
    }

    // memberInfos

    public boolean hasMemberInfos(){
        return memberInfos != null;
    }


    public GuildMemberInfos getMemberInfos()
    {
        return memberInfos == null ? new GuildMemberInfos() : memberInfos;
    }

    public RichGuildInfo setMemberInfos(GuildMemberInfos memberInfos)
    {
        this.memberInfos = memberInfos;
        return this;
    }

    // joinInfos

    public boolean hasJoinInfos(){
        return joinInfos != null;
    }


    public GuildJoinInfos getJoinInfos()
    {
        return joinInfos == null ? new GuildJoinInfos() : joinInfos;
    }

    public RichGuildInfo setJoinInfos(GuildJoinInfos joinInfos)
    {
        this.joinInfos = joinInfos;
        return this;
    }

    // inviteInfos

    public boolean hasInviteInfos(){
        return inviteInfos != null;
    }


    public GuildInviteInfos getInviteInfos()
    {
        return inviteInfos == null ? new GuildInviteInfos() : inviteInfos;
    }

    public RichGuildInfo setInviteInfos(GuildInviteInfos inviteInfos)
    {
        this.inviteInfos = inviteInfos;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<RichGuildInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public RichGuildInfo newMessage()
    {
        return new RichGuildInfo();
    }

    public Class<RichGuildInfo> typeClass()
    {
        return RichGuildInfo.class;
    }

    public String messageName()
    {
        return RichGuildInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return RichGuildInfo.class.getName();
    }

    public boolean isInitialized(RichGuildInfo message)
    {
        return 
            message.guildid != null;
    }

    public void mergeFrom(Input input, RichGuildInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.ctrl = input.mergeObject(message.ctrl, DataCtrl.getSchema());
                    break;

                case 20:
                    message.guildid = input.readUInt32();
                    break;
                case 30:
                    message.guildInfo = input.mergeObject(message.guildInfo, ExGuildInfo.getSchema());
                    break;

                case 40:
                    message.memberInfos = input.mergeObject(message.memberInfos, GuildMemberInfos.getSchema());
                    break;

                case 50:
                    message.joinInfos = input.mergeObject(message.joinInfos, GuildJoinInfos.getSchema());
                    break;

                case 60:
                    message.inviteInfos = input.mergeObject(message.inviteInfos, GuildInviteInfos.getSchema());
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, RichGuildInfo message) throws IOException
    {
        if(message.ctrl != null)
             output.writeObject(10, message.ctrl, DataCtrl.getSchema(), false);


        if(message.guildid == null)
            throw new UninitializedMessageException(message);
        output.writeUInt32(20, message.guildid, false);

        if(message.guildInfo != null)
             output.writeObject(30, message.guildInfo, ExGuildInfo.getSchema(), false);


        if(message.memberInfos != null)
             output.writeObject(40, message.memberInfos, GuildMemberInfos.getSchema(), false);


        if(message.joinInfos != null)
             output.writeObject(50, message.joinInfos, GuildJoinInfos.getSchema(), false);


        if(message.inviteInfos != null)
             output.writeObject(60, message.inviteInfos, GuildInviteInfos.getSchema(), false);

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
