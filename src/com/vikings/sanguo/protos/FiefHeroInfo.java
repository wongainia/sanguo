// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class FiefHeroInfo implements Externalizable, Message<FiefHeroInfo>, Schema<FiefHeroInfo>
{

    public static Schema<FiefHeroInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static FiefHeroInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final FiefHeroInfo DEFAULT_INSTANCE = new FiefHeroInfo();

    
    private List<HeroIdInfo> firstHeroInfos;
    private List<HeroIdInfo> secondHeroInfos;

    public FiefHeroInfo()
    {
        
    }

    // getters and setters

    // firstHeroInfos

    public boolean hasFirstHeroInfos(){
        return firstHeroInfos != null;
    }


    public List<HeroIdInfo> getFirstHeroInfosList()
    {
        return firstHeroInfos == null?  new ArrayList<HeroIdInfo>():firstHeroInfos;
    }

    public int getFirstHeroInfosCount()
    {
        return firstHeroInfos == null?0:firstHeroInfos.size();
    }

    public HeroIdInfo getFirstHeroInfos(int i)
    {
        return firstHeroInfos == null?null:firstHeroInfos.get(i);
    }


    public FiefHeroInfo setFirstHeroInfosList(List<HeroIdInfo> firstHeroInfos)
    {
        this.firstHeroInfos = firstHeroInfos;
        return this;    
    }

    // secondHeroInfos

    public boolean hasSecondHeroInfos(){
        return secondHeroInfos != null;
    }


    public List<HeroIdInfo> getSecondHeroInfosList()
    {
        return secondHeroInfos == null?  new ArrayList<HeroIdInfo>():secondHeroInfos;
    }

    public int getSecondHeroInfosCount()
    {
        return secondHeroInfos == null?0:secondHeroInfos.size();
    }

    public HeroIdInfo getSecondHeroInfos(int i)
    {
        return secondHeroInfos == null?null:secondHeroInfos.get(i);
    }


    public FiefHeroInfo setSecondHeroInfosList(List<HeroIdInfo> secondHeroInfos)
    {
        this.secondHeroInfos = secondHeroInfos;
        return this;    
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<FiefHeroInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public FiefHeroInfo newMessage()
    {
        return new FiefHeroInfo();
    }

    public Class<FiefHeroInfo> typeClass()
    {
        return FiefHeroInfo.class;
    }

    public String messageName()
    {
        return FiefHeroInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return FiefHeroInfo.class.getName();
    }

    public boolean isInitialized(FiefHeroInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, FiefHeroInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    if(message.firstHeroInfos == null)
                        message.firstHeroInfos = new ArrayList<HeroIdInfo>();
                    message.firstHeroInfos.add(input.mergeObject(null, HeroIdInfo.getSchema()));
                    break;

                case 20:
                    if(message.secondHeroInfos == null)
                        message.secondHeroInfos = new ArrayList<HeroIdInfo>();
                    message.secondHeroInfos.add(input.mergeObject(null, HeroIdInfo.getSchema()));
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, FiefHeroInfo message) throws IOException
    {
        if(message.firstHeroInfos != null)
        {
            for(HeroIdInfo firstHeroInfos : message.firstHeroInfos)
            {
                if(firstHeroInfos != null)
                    output.writeObject(10, firstHeroInfos, HeroIdInfo.getSchema(), true);
            }
        }


        if(message.secondHeroInfos != null)
        {
            for(HeroIdInfo secondHeroInfos : message.secondHeroInfos)
            {
                if(secondHeroInfos != null)
                    output.writeObject(20, secondHeroInfos, HeroIdInfo.getSchema(), true);
            }
        }

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
