// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class BriefBattleLogInfo implements Externalizable, Message<BriefBattleLogInfo>, Schema<BriefBattleLogInfo>
{

    public static Schema<BriefBattleLogInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static BriefBattleLogInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final BriefBattleLogInfo DEFAULT_INSTANCE = new BriefBattleLogInfo();

    
    private Long id;
    private Integer attacker;
    private Integer defender;
    private Integer type;
    private Integer battleResult;
    private Integer time;
    private Long attackFiefid;
    private Long defendFiefid;
    private Integer fiefScale;
    private Integer attackUnit;
    private Integer defendUnit;
    private HeroIdInfo attackHeroInfo;
    private HeroIdInfo defendHeroInfo;

    public BriefBattleLogInfo()
    {
        
    }

    // getters and setters

    // id

    public boolean hasId(){
        return id != null;
    }


    public Long getId()
    {
        return id == null ? 0L : id;
    }

    public BriefBattleLogInfo setId(Long id)
    {
        this.id = id;
        return this;
    }

    // attacker

    public boolean hasAttacker(){
        return attacker != null;
    }


    public Integer getAttacker()
    {
        return attacker == null ? 0 : attacker;
    }

    public BriefBattleLogInfo setAttacker(Integer attacker)
    {
        this.attacker = attacker;
        return this;
    }

    // defender

    public boolean hasDefender(){
        return defender != null;
    }


    public Integer getDefender()
    {
        return defender == null ? 0 : defender;
    }

    public BriefBattleLogInfo setDefender(Integer defender)
    {
        this.defender = defender;
        return this;
    }

    // type

    public boolean hasType(){
        return type != null;
    }


    public Integer getType()
    {
        return type == null ? 0 : type;
    }

    public BriefBattleLogInfo setType(Integer type)
    {
        this.type = type;
        return this;
    }

    // battleResult

    public boolean hasBattleResult(){
        return battleResult != null;
    }


    public Integer getBattleResult()
    {
        return battleResult == null ? 0 : battleResult;
    }

    public BriefBattleLogInfo setBattleResult(Integer battleResult)
    {
        this.battleResult = battleResult;
        return this;
    }

    // time

    public boolean hasTime(){
        return time != null;
    }


    public Integer getTime()
    {
        return time == null ? 0 : time;
    }

    public BriefBattleLogInfo setTime(Integer time)
    {
        this.time = time;
        return this;
    }

    // attackFiefid

    public boolean hasAttackFiefid(){
        return attackFiefid != null;
    }


    public Long getAttackFiefid()
    {
        return attackFiefid == null ? 0L : attackFiefid;
    }

    public BriefBattleLogInfo setAttackFiefid(Long attackFiefid)
    {
        this.attackFiefid = attackFiefid;
        return this;
    }

    // defendFiefid

    public boolean hasDefendFiefid(){
        return defendFiefid != null;
    }


    public Long getDefendFiefid()
    {
        return defendFiefid == null ? 0L : defendFiefid;
    }

    public BriefBattleLogInfo setDefendFiefid(Long defendFiefid)
    {
        this.defendFiefid = defendFiefid;
        return this;
    }

    // fiefScale

    public boolean hasFiefScale(){
        return fiefScale != null;
    }


    public Integer getFiefScale()
    {
        return fiefScale == null ? 0 : fiefScale;
    }

    public BriefBattleLogInfo setFiefScale(Integer fiefScale)
    {
        this.fiefScale = fiefScale;
        return this;
    }

    // attackUnit

    public boolean hasAttackUnit(){
        return attackUnit != null;
    }


    public Integer getAttackUnit()
    {
        return attackUnit == null ? 0 : attackUnit;
    }

    public BriefBattleLogInfo setAttackUnit(Integer attackUnit)
    {
        this.attackUnit = attackUnit;
        return this;
    }

    // defendUnit

    public boolean hasDefendUnit(){
        return defendUnit != null;
    }


    public Integer getDefendUnit()
    {
        return defendUnit == null ? 0 : defendUnit;
    }

    public BriefBattleLogInfo setDefendUnit(Integer defendUnit)
    {
        this.defendUnit = defendUnit;
        return this;
    }

    // attackHeroInfo

    public boolean hasAttackHeroInfo(){
        return attackHeroInfo != null;
    }


    public HeroIdInfo getAttackHeroInfo()
    {
        return attackHeroInfo == null ? new HeroIdInfo() : attackHeroInfo;
    }

    public BriefBattleLogInfo setAttackHeroInfo(HeroIdInfo attackHeroInfo)
    {
        this.attackHeroInfo = attackHeroInfo;
        return this;
    }

    // defendHeroInfo

    public boolean hasDefendHeroInfo(){
        return defendHeroInfo != null;
    }


    public HeroIdInfo getDefendHeroInfo()
    {
        return defendHeroInfo == null ? new HeroIdInfo() : defendHeroInfo;
    }

    public BriefBattleLogInfo setDefendHeroInfo(HeroIdInfo defendHeroInfo)
    {
        this.defendHeroInfo = defendHeroInfo;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<BriefBattleLogInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public BriefBattleLogInfo newMessage()
    {
        return new BriefBattleLogInfo();
    }

    public Class<BriefBattleLogInfo> typeClass()
    {
        return BriefBattleLogInfo.class;
    }

    public String messageName()
    {
        return BriefBattleLogInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return BriefBattleLogInfo.class.getName();
    }

    public boolean isInitialized(BriefBattleLogInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, BriefBattleLogInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.id = input.readUInt64();
                    break;
                case 20:
                    message.attacker = input.readUInt32();
                    break;
                case 30:
                    message.defender = input.readUInt32();
                    break;
                case 40:
                    message.type = input.readUInt32();
                    break;
                case 50:
                    message.battleResult = input.readUInt32();
                    break;
                case 60:
                    message.time = input.readUInt32();
                    break;
                case 70:
                    message.attackFiefid = input.readUInt64();
                    break;
                case 80:
                    message.defendFiefid = input.readUInt64();
                    break;
                case 90:
                    message.fiefScale = input.readUInt32();
                    break;
                case 200:
                    message.attackUnit = input.readUInt32();
                    break;
                case 210:
                    message.defendUnit = input.readUInt32();
                    break;
                case 220:
                    message.attackHeroInfo = input.mergeObject(message.attackHeroInfo, HeroIdInfo.getSchema());
                    break;

                case 230:
                    message.defendHeroInfo = input.mergeObject(message.defendHeroInfo, HeroIdInfo.getSchema());
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, BriefBattleLogInfo message) throws IOException
    {
        if(message.id != null)
            output.writeUInt64(10, message.id, false);

        if(message.attacker != null)
            output.writeUInt32(20, message.attacker, false);

        if(message.defender != null)
            output.writeUInt32(30, message.defender, false);

        if(message.type != null)
            output.writeUInt32(40, message.type, false);

        if(message.battleResult != null)
            output.writeUInt32(50, message.battleResult, false);

        if(message.time != null)
            output.writeUInt32(60, message.time, false);

        if(message.attackFiefid != null)
            output.writeUInt64(70, message.attackFiefid, false);

        if(message.defendFiefid != null)
            output.writeUInt64(80, message.defendFiefid, false);

        if(message.fiefScale != null)
            output.writeUInt32(90, message.fiefScale, false);

        if(message.attackUnit != null)
            output.writeUInt32(200, message.attackUnit, false);

        if(message.defendUnit != null)
            output.writeUInt32(210, message.defendUnit, false);

        if(message.attackHeroInfo != null)
             output.writeObject(220, message.attackHeroInfo, HeroIdInfo.getSchema(), false);


        if(message.defendHeroInfo != null)
             output.writeObject(230, message.defendHeroInfo, HeroIdInfo.getSchema(), false);

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
