// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgRspUserStatData implements Externalizable, Message<MsgRspUserStatData>, Schema<MsgRspUserStatData>
{

    public static Schema<MsgRspUserStatData> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgRspUserStatData getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgRspUserStatData DEFAULT_INSTANCE = new MsgRspUserStatData();

    
    private List<UserStatData> datas;

    public MsgRspUserStatData()
    {
        
    }

    // getters and setters

    // datas

    public boolean hasDatas(){
        return datas != null;
    }


    public List<UserStatData> getDatasList()
    {
        return datas == null?  new ArrayList<UserStatData>():datas;
    }

    public int getDatasCount()
    {
        return datas == null?0:datas.size();
    }

    public UserStatData getDatas(int i)
    {
        return datas == null?null:datas.get(i);
    }


    public MsgRspUserStatData setDatasList(List<UserStatData> datas)
    {
        this.datas = datas;
        return this;    
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgRspUserStatData> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgRspUserStatData newMessage()
    {
        return new MsgRspUserStatData();
    }

    public Class<MsgRspUserStatData> typeClass()
    {
        return MsgRspUserStatData.class;
    }

    public String messageName()
    {
        return MsgRspUserStatData.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgRspUserStatData.class.getName();
    }

    public boolean isInitialized(MsgRspUserStatData message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgRspUserStatData message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    if(message.datas == null)
                        message.datas = new ArrayList<UserStatData>();
                    message.datas.add(input.mergeObject(null, UserStatData.getSchema()));
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgRspUserStatData message) throws IOException
    {
        if(message.datas != null)
        {
            for(UserStatData datas : message.datas)
            {
                if(datas != null)
                    output.writeObject(1, datas, UserStatData.getSchema(), true);
            }
        }

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
