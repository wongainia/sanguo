// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqAccountBinding2 implements Externalizable, Message<MsgReqAccountBinding2>, Schema<MsgReqAccountBinding2>
{

    public static Schema<MsgReqAccountBinding2> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqAccountBinding2 getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqAccountBinding2 DEFAULT_INSTANCE = new MsgReqAccountBinding2();

    
    private BindingType bindingType;
    private String value;
    private Integer code;
    private Integer inviter;

    public MsgReqAccountBinding2()
    {
        
    }

    // getters and setters

    // bindingType

    public boolean hasBindingType(){
        return bindingType != null;
    }


    public BindingType getBindingType()
    {
        return bindingType == null ? BindingType.BINDING_MOBILE : bindingType;
    }

    public MsgReqAccountBinding2 setBindingType(BindingType bindingType)
    {
        this.bindingType = bindingType;
        return this;
    }

    // value

    public boolean hasValue(){
        return value != null;
    }


    public String getValue()
    {
        return value == null ? "" : value;
    }

    public MsgReqAccountBinding2 setValue(String value)
    {
        this.value = value;
        return this;
    }

    // code

    public boolean hasCode(){
        return code != null;
    }


    public Integer getCode()
    {
        return code == null ? 0 : code;
    }

    public MsgReqAccountBinding2 setCode(Integer code)
    {
        this.code = code;
        return this;
    }

    // inviter

    public boolean hasInviter(){
        return inviter != null;
    }


    public Integer getInviter()
    {
        return inviter == null ? 0 : inviter;
    }

    public MsgReqAccountBinding2 setInviter(Integer inviter)
    {
        this.inviter = inviter;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqAccountBinding2> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqAccountBinding2 newMessage()
    {
        return new MsgReqAccountBinding2();
    }

    public Class<MsgReqAccountBinding2> typeClass()
    {
        return MsgReqAccountBinding2.class;
    }

    public String messageName()
    {
        return MsgReqAccountBinding2.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqAccountBinding2.class.getName();
    }

    public boolean isInitialized(MsgReqAccountBinding2 message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqAccountBinding2 message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.bindingType = BindingType.valueOf(input.readEnum());
                    break;
                case 20:
                    message.value = input.readString();
                    break;
                case 30:
                    message.code = input.readUInt32();
                    break;
                case 40:
                    message.inviter = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqAccountBinding2 message) throws IOException
    {
        if(message.bindingType != null)
             output.writeEnum(10, message.bindingType.number, false);

        if(message.value != null)
            output.writeString(20, message.value, false);

        if(message.code != null)
            output.writeUInt32(30, message.code, false);

        if(message.inviter != null)
            output.writeUInt32(40, message.inviter, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
