// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class ServerBattleInfo implements Externalizable, Message<ServerBattleInfo>, Schema<ServerBattleInfo>
{

    public static Schema<ServerBattleInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static ServerBattleInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final ServerBattleInfo DEFAULT_INSTANCE = new ServerBattleInfo();

    
    private Integer battleResult;
    private Integer attackBattleUnit;
    private Integer defendBattleUnit;
    private Long transaction;
    private Long logid;
    private Long jobid;
    private List<BattleLogReturnInfo> ris;
    private List<ReturnHeroInfo> rhis;
    private String extend;

    public ServerBattleInfo()
    {
        
    }

    // getters and setters

    // battleResult

    public boolean hasBattleResult(){
        return battleResult != null;
    }


    public Integer getBattleResult()
    {
        return battleResult == null ? 0 : battleResult;
    }

    public ServerBattleInfo setBattleResult(Integer battleResult)
    {
        this.battleResult = battleResult;
        return this;
    }

    // attackBattleUnit

    public boolean hasAttackBattleUnit(){
        return attackBattleUnit != null;
    }


    public Integer getAttackBattleUnit()
    {
        return attackBattleUnit == null ? 0 : attackBattleUnit;
    }

    public ServerBattleInfo setAttackBattleUnit(Integer attackBattleUnit)
    {
        this.attackBattleUnit = attackBattleUnit;
        return this;
    }

    // defendBattleUnit

    public boolean hasDefendBattleUnit(){
        return defendBattleUnit != null;
    }


    public Integer getDefendBattleUnit()
    {
        return defendBattleUnit == null ? 0 : defendBattleUnit;
    }

    public ServerBattleInfo setDefendBattleUnit(Integer defendBattleUnit)
    {
        this.defendBattleUnit = defendBattleUnit;
        return this;
    }

    // transaction

    public boolean hasTransaction(){
        return transaction != null;
    }


    public Long getTransaction()
    {
        return transaction == null ? 0L : transaction;
    }

    public ServerBattleInfo setTransaction(Long transaction)
    {
        this.transaction = transaction;
        return this;
    }

    // logid

    public boolean hasLogid(){
        return logid != null;
    }


    public Long getLogid()
    {
        return logid == null ? 0L : logid;
    }

    public ServerBattleInfo setLogid(Long logid)
    {
        this.logid = logid;
        return this;
    }

    // jobid

    public boolean hasJobid(){
        return jobid != null;
    }


    public Long getJobid()
    {
        return jobid == null ? 0L : jobid;
    }

    public ServerBattleInfo setJobid(Long jobid)
    {
        this.jobid = jobid;
        return this;
    }

    // ris

    public boolean hasRis(){
        return ris != null;
    }


    public List<BattleLogReturnInfo> getRisList()
    {
        return ris == null?  new ArrayList<BattleLogReturnInfo>():ris;
    }

    public int getRisCount()
    {
        return ris == null?0:ris.size();
    }

    public BattleLogReturnInfo getRis(int i)
    {
        return ris == null?null:ris.get(i);
    }


    public ServerBattleInfo setRisList(List<BattleLogReturnInfo> ris)
    {
        this.ris = ris;
        return this;    
    }

    // rhis

    public boolean hasRhis(){
        return rhis != null;
    }


    public List<ReturnHeroInfo> getRhisList()
    {
        return rhis == null?  new ArrayList<ReturnHeroInfo>():rhis;
    }

    public int getRhisCount()
    {
        return rhis == null?0:rhis.size();
    }

    public ReturnHeroInfo getRhis(int i)
    {
        return rhis == null?null:rhis.get(i);
    }


    public ServerBattleInfo setRhisList(List<ReturnHeroInfo> rhis)
    {
        this.rhis = rhis;
        return this;    
    }

    // extend

    public boolean hasExtend(){
        return extend != null;
    }


    public String getExtend()
    {
        return extend == null ? "" : extend;
    }

    public ServerBattleInfo setExtend(String extend)
    {
        this.extend = extend;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<ServerBattleInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public ServerBattleInfo newMessage()
    {
        return new ServerBattleInfo();
    }

    public Class<ServerBattleInfo> typeClass()
    {
        return ServerBattleInfo.class;
    }

    public String messageName()
    {
        return ServerBattleInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return ServerBattleInfo.class.getName();
    }

    public boolean isInitialized(ServerBattleInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, ServerBattleInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.battleResult = input.readUInt32();
                    break;
                case 20:
                    message.attackBattleUnit = input.readUInt32();
                    break;
                case 30:
                    message.defendBattleUnit = input.readUInt32();
                    break;
                case 80:
                    message.transaction = input.readUInt64();
                    break;
                case 90:
                    message.logid = input.readUInt64();
                    break;
                case 100:
                    message.jobid = input.readUInt64();
                    break;
                case 110:
                    if(message.ris == null)
                        message.ris = new ArrayList<BattleLogReturnInfo>();
                    message.ris.add(input.mergeObject(null, BattleLogReturnInfo.getSchema()));
                    break;

                case 120:
                    if(message.rhis == null)
                        message.rhis = new ArrayList<ReturnHeroInfo>();
                    message.rhis.add(input.mergeObject(null, ReturnHeroInfo.getSchema()));
                    break;

                case 200:
                    message.extend = input.readString();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, ServerBattleInfo message) throws IOException
    {
        if(message.battleResult != null)
            output.writeUInt32(10, message.battleResult, false);

        if(message.attackBattleUnit != null)
            output.writeUInt32(20, message.attackBattleUnit, false);

        if(message.defendBattleUnit != null)
            output.writeUInt32(30, message.defendBattleUnit, false);

        if(message.transaction != null)
            output.writeUInt64(80, message.transaction, false);

        if(message.logid != null)
            output.writeUInt64(90, message.logid, false);

        if(message.jobid != null)
            output.writeUInt64(100, message.jobid, false);

        if(message.ris != null)
        {
            for(BattleLogReturnInfo ris : message.ris)
            {
                if(ris != null)
                    output.writeObject(110, ris, BattleLogReturnInfo.getSchema(), true);
            }
        }


        if(message.rhis != null)
        {
            for(ReturnHeroInfo rhis : message.rhis)
            {
                if(rhis != null)
                    output.writeObject(120, rhis, ReturnHeroInfo.getSchema(), true);
            }
        }


        if(message.extend != null)
            output.writeString(200, message.extend, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
