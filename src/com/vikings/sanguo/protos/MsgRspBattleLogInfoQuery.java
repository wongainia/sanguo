// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgRspBattleLogInfoQuery implements Externalizable, Message<MsgRspBattleLogInfoQuery>, Schema<MsgRspBattleLogInfoQuery>
{

    public static Schema<MsgRspBattleLogInfoQuery> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgRspBattleLogInfoQuery getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgRspBattleLogInfoQuery DEFAULT_INSTANCE = new MsgRspBattleLogInfoQuery();

    
    private BattleLogInfo info;

    public MsgRspBattleLogInfoQuery()
    {
        
    }

    // getters and setters

    // info

    public boolean hasInfo(){
        return info != null;
    }


    public BattleLogInfo getInfo()
    {
        return info == null ? new BattleLogInfo() : info;
    }

    public MsgRspBattleLogInfoQuery setInfo(BattleLogInfo info)
    {
        this.info = info;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgRspBattleLogInfoQuery> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgRspBattleLogInfoQuery newMessage()
    {
        return new MsgRspBattleLogInfoQuery();
    }

    public Class<MsgRspBattleLogInfoQuery> typeClass()
    {
        return MsgRspBattleLogInfoQuery.class;
    }

    public String messageName()
    {
        return MsgRspBattleLogInfoQuery.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgRspBattleLogInfoQuery.class.getName();
    }

    public boolean isInitialized(MsgRspBattleLogInfoQuery message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgRspBattleLogInfoQuery message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.info = input.mergeObject(message.info, BattleLogInfo.getSchema());
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgRspBattleLogInfoQuery message) throws IOException
    {
        if(message.info != null)
             output.writeObject(10, message.info, BattleLogInfo.getSchema(), false);

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
