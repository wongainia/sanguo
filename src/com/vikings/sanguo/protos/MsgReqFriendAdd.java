// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqFriendAdd implements Externalizable, Message<MsgReqFriendAdd>, Schema<MsgReqFriendAdd>
{

    public static Schema<MsgReqFriendAdd> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqFriendAdd getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqFriendAdd DEFAULT_INSTANCE = new MsgReqFriendAdd();

    
    private List<Integer> userids;

    public MsgReqFriendAdd()
    {
        
    }

    // getters and setters

    // userids

    public boolean hasUserids(){
        return userids != null;
    }


    public List<Integer> getUseridsList()
    {
        return userids == null?  new ArrayList<Integer>():userids;
    }

    public int getUseridsCount()
    {
        return userids == null?0:userids.size();
    }

    public Integer getUserids(int i)
    {
        return userids == null?null:userids.get(i);
    }


    public MsgReqFriendAdd setUseridsList(List<Integer> userids)
    {
        this.userids = userids;
        return this;    
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqFriendAdd> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqFriendAdd newMessage()
    {
        return new MsgReqFriendAdd();
    }

    public Class<MsgReqFriendAdd> typeClass()
    {
        return MsgReqFriendAdd.class;
    }

    public String messageName()
    {
        return MsgReqFriendAdd.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqFriendAdd.class.getName();
    }

    public boolean isInitialized(MsgReqFriendAdd message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqFriendAdd message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    if(message.userids == null)
                        message.userids = new ArrayList<Integer>();
                    message.userids.add(input.readUInt32());
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqFriendAdd message) throws IOException
    {
        if(message.userids != null)
        {
            for(Integer userids : message.userids)
            {
                if(userids != null)
                    output.writeUInt32(10, userids, true);
            }
        }
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
