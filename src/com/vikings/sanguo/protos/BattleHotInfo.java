// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class BattleHotInfo implements Externalizable, Message<BattleHotInfo>, Schema<BattleHotInfo>
{

    public static Schema<BattleHotInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static BattleHotInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final BattleHotInfo DEFAULT_INSTANCE = new BattleHotInfo();

    
    private Integer attacker;
    private Integer defender;
    private Integer attackTotalTroop;
    private Integer defendTotalTroop;
    private Long fiefid;
    private Long battleLogId;
    private Integer time;
    private Integer scale;
    private Integer result;
    private Integer type;
    private HeroIdInfo attackHeroInfo;
    private HeroIdInfo defendHeroInfo;

    public BattleHotInfo()
    {
        
    }

    // getters and setters

    // attacker

    public boolean hasAttacker(){
        return attacker != null;
    }


    public Integer getAttacker()
    {
        return attacker == null ? 0 : attacker;
    }

    public BattleHotInfo setAttacker(Integer attacker)
    {
        this.attacker = attacker;
        return this;
    }

    // defender

    public boolean hasDefender(){
        return defender != null;
    }


    public Integer getDefender()
    {
        return defender == null ? 0 : defender;
    }

    public BattleHotInfo setDefender(Integer defender)
    {
        this.defender = defender;
        return this;
    }

    // attackTotalTroop

    public boolean hasAttackTotalTroop(){
        return attackTotalTroop != null;
    }


    public Integer getAttackTotalTroop()
    {
        return attackTotalTroop == null ? 0 : attackTotalTroop;
    }

    public BattleHotInfo setAttackTotalTroop(Integer attackTotalTroop)
    {
        this.attackTotalTroop = attackTotalTroop;
        return this;
    }

    // defendTotalTroop

    public boolean hasDefendTotalTroop(){
        return defendTotalTroop != null;
    }


    public Integer getDefendTotalTroop()
    {
        return defendTotalTroop == null ? 0 : defendTotalTroop;
    }

    public BattleHotInfo setDefendTotalTroop(Integer defendTotalTroop)
    {
        this.defendTotalTroop = defendTotalTroop;
        return this;
    }

    // fiefid

    public boolean hasFiefid(){
        return fiefid != null;
    }


    public Long getFiefid()
    {
        return fiefid == null ? 0L : fiefid;
    }

    public BattleHotInfo setFiefid(Long fiefid)
    {
        this.fiefid = fiefid;
        return this;
    }

    // battleLogId

    public boolean hasBattleLogId(){
        return battleLogId != null;
    }


    public Long getBattleLogId()
    {
        return battleLogId == null ? 0L : battleLogId;
    }

    public BattleHotInfo setBattleLogId(Long battleLogId)
    {
        this.battleLogId = battleLogId;
        return this;
    }

    // time

    public boolean hasTime(){
        return time != null;
    }


    public Integer getTime()
    {
        return time == null ? 0 : time;
    }

    public BattleHotInfo setTime(Integer time)
    {
        this.time = time;
        return this;
    }

    // scale

    public boolean hasScale(){
        return scale != null;
    }


    public Integer getScale()
    {
        return scale == null ? 0 : scale;
    }

    public BattleHotInfo setScale(Integer scale)
    {
        this.scale = scale;
        return this;
    }

    // result

    public boolean hasResult(){
        return result != null;
    }


    public Integer getResult()
    {
        return result == null ? 0 : result;
    }

    public BattleHotInfo setResult(Integer result)
    {
        this.result = result;
        return this;
    }

    // type

    public boolean hasType(){
        return type != null;
    }


    public Integer getType()
    {
        return type == null ? 0 : type;
    }

    public BattleHotInfo setType(Integer type)
    {
        this.type = type;
        return this;
    }

    // attackHeroInfo

    public boolean hasAttackHeroInfo(){
        return attackHeroInfo != null;
    }


    public HeroIdInfo getAttackHeroInfo()
    {
        return attackHeroInfo == null ? new HeroIdInfo() : attackHeroInfo;
    }

    public BattleHotInfo setAttackHeroInfo(HeroIdInfo attackHeroInfo)
    {
        this.attackHeroInfo = attackHeroInfo;
        return this;
    }

    // defendHeroInfo

    public boolean hasDefendHeroInfo(){
        return defendHeroInfo != null;
    }


    public HeroIdInfo getDefendHeroInfo()
    {
        return defendHeroInfo == null ? new HeroIdInfo() : defendHeroInfo;
    }

    public BattleHotInfo setDefendHeroInfo(HeroIdInfo defendHeroInfo)
    {
        this.defendHeroInfo = defendHeroInfo;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<BattleHotInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public BattleHotInfo newMessage()
    {
        return new BattleHotInfo();
    }

    public Class<BattleHotInfo> typeClass()
    {
        return BattleHotInfo.class;
    }

    public String messageName()
    {
        return BattleHotInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return BattleHotInfo.class.getName();
    }

    public boolean isInitialized(BattleHotInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, BattleHotInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.attacker = input.readUInt32();
                    break;
                case 15:
                    message.defender = input.readUInt32();
                    break;
                case 20:
                    message.attackTotalTroop = input.readUInt32();
                    break;
                case 25:
                    message.defendTotalTroop = input.readUInt32();
                    break;
                case 30:
                    message.fiefid = input.readUInt64();
                    break;
                case 40:
                    message.battleLogId = input.readUInt64();
                    break;
                case 50:
                    message.time = input.readUInt32();
                    break;
                case 60:
                    message.scale = input.readUInt32();
                    break;
                case 70:
                    message.result = input.readUInt32();
                    break;
                case 80:
                    message.type = input.readUInt32();
                    break;
                case 90:
                    message.attackHeroInfo = input.mergeObject(message.attackHeroInfo, HeroIdInfo.getSchema());
                    break;

                case 100:
                    message.defendHeroInfo = input.mergeObject(message.defendHeroInfo, HeroIdInfo.getSchema());
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, BattleHotInfo message) throws IOException
    {
        if(message.attacker != null)
            output.writeUInt32(10, message.attacker, false);

        if(message.defender != null)
            output.writeUInt32(15, message.defender, false);

        if(message.attackTotalTroop != null)
            output.writeUInt32(20, message.attackTotalTroop, false);

        if(message.defendTotalTroop != null)
            output.writeUInt32(25, message.defendTotalTroop, false);

        if(message.fiefid != null)
            output.writeUInt64(30, message.fiefid, false);

        if(message.battleLogId != null)
            output.writeUInt64(40, message.battleLogId, false);

        if(message.time != null)
            output.writeUInt32(50, message.time, false);

        if(message.scale != null)
            output.writeUInt32(60, message.scale, false);

        if(message.result != null)
            output.writeUInt32(70, message.result, false);

        if(message.type != null)
            output.writeUInt32(80, message.type, false);

        if(message.attackHeroInfo != null)
             output.writeObject(90, message.attackHeroInfo, HeroIdInfo.getSchema(), false);


        if(message.defendHeroInfo != null)
             output.writeObject(100, message.defendHeroInfo, HeroIdInfo.getSchema(), false);

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
