// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgRspUserRankInfo implements Externalizable, Message<MsgRspUserRankInfo>, Schema<MsgRspUserRankInfo>
{

    public static Schema<MsgRspUserRankInfo> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgRspUserRankInfo getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgRspUserRankInfo DEFAULT_INSTANCE = new MsgRspUserRankInfo();

    
    private List<UserRankInfo> infos;
    private Integer selfPos;
    private Integer total;

    public MsgRspUserRankInfo()
    {
        
    }

    // getters and setters

    // infos

    public boolean hasInfos(){
        return infos != null;
    }


    public List<UserRankInfo> getInfosList()
    {
        return infos == null?  new ArrayList<UserRankInfo>():infos;
    }

    public int getInfosCount()
    {
        return infos == null?0:infos.size();
    }

    public UserRankInfo getInfos(int i)
    {
        return infos == null?null:infos.get(i);
    }


    public MsgRspUserRankInfo setInfosList(List<UserRankInfo> infos)
    {
        this.infos = infos;
        return this;    
    }

    // selfPos

    public boolean hasSelfPos(){
        return selfPos != null;
    }


    public Integer getSelfPos()
    {
        return selfPos == null ? 0 : selfPos;
    }

    public MsgRspUserRankInfo setSelfPos(Integer selfPos)
    {
        this.selfPos = selfPos;
        return this;
    }

    // total

    public boolean hasTotal(){
        return total != null;
    }


    public Integer getTotal()
    {
        return total == null ? 0 : total;
    }

    public MsgRspUserRankInfo setTotal(Integer total)
    {
        this.total = total;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgRspUserRankInfo> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgRspUserRankInfo newMessage()
    {
        return new MsgRspUserRankInfo();
    }

    public Class<MsgRspUserRankInfo> typeClass()
    {
        return MsgRspUserRankInfo.class;
    }

    public String messageName()
    {
        return MsgRspUserRankInfo.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgRspUserRankInfo.class.getName();
    }

    public boolean isInitialized(MsgRspUserRankInfo message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgRspUserRankInfo message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    if(message.infos == null)
                        message.infos = new ArrayList<UserRankInfo>();
                    message.infos.add(input.mergeObject(null, UserRankInfo.getSchema()));
                    break;

                case 20:
                    message.selfPos = input.readUInt32();
                    break;
                case 30:
                    message.total = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgRspUserRankInfo message) throws IOException
    {
        if(message.infos != null)
        {
            for(UserRankInfo infos : message.infos)
            {
                if(infos != null)
                    output.writeObject(10, infos, UserRankInfo.getSchema(), true);
            }
        }


        if(message.selfPos != null)
            output.writeUInt32(20, message.selfPos, false);

        if(message.total != null)
            output.writeUInt32(30, message.total, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
