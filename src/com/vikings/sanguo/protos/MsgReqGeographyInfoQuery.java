// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqGeographyInfoQuery implements Externalizable, Message<MsgReqGeographyInfoQuery>, Schema<MsgReqGeographyInfoQuery>
{

    public static Schema<MsgReqGeographyInfoQuery> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqGeographyInfoQuery getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqGeographyInfoQuery DEFAULT_INSTANCE = new MsgReqGeographyInfoQuery();

    
    private List<Long> pos;

    public MsgReqGeographyInfoQuery()
    {
        
    }

    // getters and setters

    // pos

    public boolean hasPos(){
        return pos != null;
    }


    public List<Long> getPosList()
    {
        return pos == null?  new ArrayList<Long>():pos;
    }

    public int getPosCount()
    {
        return pos == null?0:pos.size();
    }

    public Long getPos(int i)
    {
        return pos == null?null:pos.get(i);
    }


    public MsgReqGeographyInfoQuery setPosList(List<Long> pos)
    {
        this.pos = pos;
        return this;    
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqGeographyInfoQuery> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqGeographyInfoQuery newMessage()
    {
        return new MsgReqGeographyInfoQuery();
    }

    public Class<MsgReqGeographyInfoQuery> typeClass()
    {
        return MsgReqGeographyInfoQuery.class;
    }

    public String messageName()
    {
        return MsgReqGeographyInfoQuery.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqGeographyInfoQuery.class.getName();
    }

    public boolean isInitialized(MsgReqGeographyInfoQuery message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqGeographyInfoQuery message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    if(message.pos == null)
                        message.pos = new ArrayList<Long>();
                    message.pos.add(input.readUInt64());
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqGeographyInfoQuery message) throws IOException
    {
        if(message.pos != null)
        {
            for(Long pos : message.pos)
            {
                if(pos != null)
                    output.writeUInt64(10, pos, true);
            }
        }
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
