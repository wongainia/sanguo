// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from client.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class MsgReqUserDataSyn2 implements Externalizable, Message<MsgReqUserDataSyn2>, Schema<MsgReqUserDataSyn2>
{

    public static Schema<MsgReqUserDataSyn2> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static MsgReqUserDataSyn2 getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final MsgReqUserDataSyn2 DEFAULT_INSTANCE = new MsgReqUserDataSyn2();

    
    private Integer synFlag;
    private Integer dataType;

    public MsgReqUserDataSyn2()
    {
        
    }

    // getters and setters

    // synFlag

    public boolean hasSynFlag(){
        return synFlag != null;
    }


    public Integer getSynFlag()
    {
        return synFlag == null ? 0 : synFlag;
    }

    public MsgReqUserDataSyn2 setSynFlag(Integer synFlag)
    {
        this.synFlag = synFlag;
        return this;
    }

    // dataType

    public boolean hasDataType(){
        return dataType != null;
    }


    public Integer getDataType()
    {
        return dataType == null ? 0 : dataType;
    }

    public MsgReqUserDataSyn2 setDataType(Integer dataType)
    {
        this.dataType = dataType;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<MsgReqUserDataSyn2> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public MsgReqUserDataSyn2 newMessage()
    {
        return new MsgReqUserDataSyn2();
    }

    public Class<MsgReqUserDataSyn2> typeClass()
    {
        return MsgReqUserDataSyn2.class;
    }

    public String messageName()
    {
        return MsgReqUserDataSyn2.class.getSimpleName();
    }

    public String messageFullName()
    {
        return MsgReqUserDataSyn2.class.getName();
    }

    public boolean isInitialized(MsgReqUserDataSyn2 message)
    {
        return true;
    }

    public void mergeFrom(Input input, MsgReqUserDataSyn2 message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.synFlag = input.readUInt32();
                    break;
                case 20:
                    message.dataType = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, MsgReqUserDataSyn2 message) throws IOException
    {
        if(message.synFlag != null)
            output.writeUInt32(10, message.synFlag, false);

        if(message.dataType != null)
            output.writeUInt32(20, message.dataType, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
