// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from common.proto

package com.vikings.sanguo.protos;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class CampaignTimeCondition implements Externalizable, Message<CampaignTimeCondition>, Schema<CampaignTimeCondition>
{

    public static Schema<CampaignTimeCondition> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static CampaignTimeCondition getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final CampaignTimeCondition DEFAULT_INSTANCE = new CampaignTimeCondition();

    
    private Integer bt;
    private Integer et;
    private Integer times;
    private Integer day;

    public CampaignTimeCondition()
    {
        
    }

    // getters and setters

    // bt

    public boolean hasBt(){
        return bt != null;
    }


    public Integer getBt()
    {
        return bt == null ? 0 : bt;
    }

    public CampaignTimeCondition setBt(Integer bt)
    {
        this.bt = bt;
        return this;
    }

    // et

    public boolean hasEt(){
        return et != null;
    }


    public Integer getEt()
    {
        return et == null ? 0 : et;
    }

    public CampaignTimeCondition setEt(Integer et)
    {
        this.et = et;
        return this;
    }

    // times

    public boolean hasTimes(){
        return times != null;
    }


    public Integer getTimes()
    {
        return times == null ? 0 : times;
    }

    public CampaignTimeCondition setTimes(Integer times)
    {
        this.times = times;
        return this;
    }

    // day

    public boolean hasDay(){
        return day != null;
    }


    public Integer getDay()
    {
        return day == null ? 0 : day;
    }

    public CampaignTimeCondition setDay(Integer day)
    {
        this.day = day;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<CampaignTimeCondition> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public CampaignTimeCondition newMessage()
    {
        return new CampaignTimeCondition();
    }

    public Class<CampaignTimeCondition> typeClass()
    {
        return CampaignTimeCondition.class;
    }

    public String messageName()
    {
        return CampaignTimeCondition.class.getSimpleName();
    }

    public String messageFullName()
    {
        return CampaignTimeCondition.class.getName();
    }

    public boolean isInitialized(CampaignTimeCondition message)
    {
        return true;
    }

    public void mergeFrom(Input input, CampaignTimeCondition message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 10:
                    message.bt = input.readUInt32();
                    break;
                case 20:
                    message.et = input.readUInt32();
                    break;
                case 30:
                    message.times = input.readUInt32();
                    break;
                case 40:
                    message.day = input.readUInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, CampaignTimeCondition message) throws IOException
    {
        if(message.bt != null)
            output.writeUInt32(10, message.bt, false);

        if(message.et != null)
            output.writeUInt32(20, message.et, false);

        if(message.times != null)
            output.writeUInt32(30, message.times, false);

        if(message.day != null)
            output.writeUInt32(40, message.day, false);
    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
